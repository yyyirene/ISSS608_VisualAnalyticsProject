[
  {
    "objectID": "Findings.html",
    "href": "Findings.html",
    "title": "Findings of Mini-Challenge 1",
    "section": "",
    "text": "Through a series of visual analytics and network-based visualizations, we have uncovered deep insights into Sailor Shift’s career, her influence across genres, and the evolving identity of the Oceanus Folk community. Below is a synthesis of findings drawn from interactive exploration of the musical influence graph:\n\n\n\n\n\n\n\n\n\n\n\nFrom the 2nd network depth:\nAcross the three visualizations of second-degree influence, we gain a nuanced understanding of how Sailor Shift’s artistry has been shaped by the broader musical landscape. The first two plots show that she draws inspiration from a diverse and layered mix of songs, albums, musical groups, and individuals, with influence types ranging from InStyleOf and PerformerOf to CoverOf, InterpolatesFrom, and LyricistOf. These edge types reveal her stylistic adaptability and lyrical depth, often engaging in reinterpretation and reimagination rather than imitation.\nThe third visualization, which focuses on notable nodes, highlights that many of Sailor Shift’s most impactful influences stem from high-profile works and creators. This suggests that her rise may be partially driven by alignment with established, reputable artists and their stylistic legacies. The density of notable nodes indicates that she has strategically positioned herself within a web of influential musical threads — absorbing, reworking, and echoing their signature styles.\nTogether, these visualizations depict Sailor Shift as not only a product of the Oceanus Folk genre but also a curator of its finest traditions, synthesizing both mainstream and niche influences into a sound that feels authentic yet elevated. Her indirect influences — passed through highly notable intermediaries — demonstrate how a rising artist can build cultural credibility while also innovating within tradition.\n\nFrom the 3rd network depth:\nBy expanding the influence network to three layers, we uncover the deep and expansive web of creative lineage behind Sailor Shift’s music. This view illustrates not just who directly influenced her, but also who influenced those influencers — providing a glimpse into the cultural and artistic ancestry of her sound. The network becomes more interconnected and dense, with many secondary and tertiary songs, albums, and artists feeding into the evolution of her musical identity.\n\n\n\n\nThe graph illustrates that Sailor Shift’s musical influence radiates outward through diverse roles: as a producer, lyricist, stylistic inspiration, and even being referenced lyrically. She not only performs but actively shapes the creative identity of collaborators like Cassian Storm, The Phantom Operators, and Claire Holmes.\nThe presence of multiple record labels (e.g., Oceanic Records, Coastal Harmony Studios) and musical groups demonstrates that Sailor’s influence extends beyond individuals to organizational and stylistic levels. Several collaborators such as Daniel O’Connell and Silver Veil also serve as bridges to larger creative clusters, amplifying her reach.\nNotably, the graph also highlights two-way influence, as some connections (like InterpolatesFrom and LyricalReferenceTo) suggest mutual artistic dialogue rather than unidirectional impact.\n\n\n\n\n\n\nThe timeline reveals that Sailor Shift’s collaborative activities have grown more frequent and diversified over time, particularly in the role of Performer (blue). Her lyricist collaborations (green) remained consistent but less frequent, while composer roles (red) were not prominent in this specific view.\n\n\nThis suggests that as her career progresses, she becomes increasingly engaged as a performer across a variety of projects, possibly reflecting growing demand for her unique artistic voice. The timeline also hints at a potential creative peak or resurgence around 2030–2035, with a surge in collaborations.\n\n\n\n\nSailor Shift’s influence on the music landscape is both broad and genre-defining, with Psychedelic Rock emerging as the most impacted genre, suggesting her strong association with experimental and atmospheric sounds. She engages with others primarily as a Performer (99 instances), far surpassing roles like LyricistOf or ComposerOf, signaling her performance-driven influence. Over time, as seen in the Collaboration Heatmap, her performer-based collaborations peak around 2030–2032, while her lyrical and compositional collaborations remain more selective and episodic. The data highlights her as a genre-shaping artist, with both direct and indirect forms of influence—such as InStyleOf and DirectlySamples—showing her artistic footprint across multiple dimensions.\n\n\n\n\n\nThe visualizations reveal that Sailor Shift is the most active and central collaborator in the network, with the highest number of collaboration counts—especially as a PerformerOf, followed by LyricistOf and ComposerOf roles. Among all artists, she stands out significantly in terms of connectivity, underscoring her leading role in shaping musical outputs. The bar chart also shows 116 notable works associated with her and a total of 185 connected nodes, indicating both breadth and depth of influence across the music ecosystem. These metrics highlight her prominent footprint in the community and position her as a pivotal figure in the Oceanus Folk genre and beyond.\n\n\n\n\nThe diffusion of musical influence represents a crucial mechanism for understanding genre evolution, artistic innovation, and cross-style hybridity. In this section, we investigate the genre Oceanus Folk as both a progenitor and recipient of stylistic influence using EchoScope™’s Genre Diffusion Tracker. Specifically, we analyze the directional impact of Oceanus Folk before and after the fame of Sailor Shift in 2012, and examine how this genre propagates across musical ecosystems through influence networks, genre timelines, and layered Sankey transitions.\n\n\n\nTo understand the structural propagation of Oceanus Folk, we employed 1-hop influence graphs filtered by time (1990–2025) and node type (track-level granularity). The networks were divided temporally by the Sailor Shift Fame Year (2012).\n\n\n\nPrior to 2012, the Pre-Fame Influence Network demonstrates a localized and compact topology, characterized by genre-internal propagation. Central nodes such as:\n\n“Beyond Our Limitations”\n“Exile’s Whisper”\n“Whispers of a Wandering Soul”\n\nemerge as formative tracks within a tightly coupled cluster. The dominance of green and yellow nodes (Oceanus Folk tracks) suggests that the genre’s early phase was self-referential—marked by genre consolidation rather than cross-pollination.\n\n\n\nFollowing Sailor Shift’s rise to fame, the Post-Fame Network exhibits a marked increase in node volume, diversity, and centrality dispersion. Notably, Oceanus Folk begins to act as a genre-exporting hub, influencing a broader set of genres including:\n\nIndie Folk (e.g., Ripples and Whispers, Beyond Our Limitations)\nSynthpop (e.g., Echo Chamber Records, Unique Frequencies)\nAlternative Rock (e.g., Destiny’s Call)\n\nThe emergence of blue and pink nodes indicates a transition from genre insulation to genre integration, where Oceanus Folk motifs begin embedding within distinct musical contexts.\n\n\n\n\nThe Timeline Trend Visualization provides longitudinal evidence of genre diffusion intensity. From 1990 to 2010, Oceanus Folk’s influence remained relatively stable, rarely surpassing 100 affected nodes per year. Post-2012, however, a periodic spike pattern is observable, peaking in:\n\n2012 (coinciding with Sailor Shift’s fame)\n2015, 2018, 2021, 2023 — with affected node counts exceeding 250–300\n\n\n\n\nFrom the area chart, several genres show coordinated upward trends aligned with Oceanus Folk’s diffusion spikes:\n\nAvant-Garde Folk and Darkwave show strong co-movement, suggesting a textural or thematic compatibility\nAlternative Rock and Desert Rock gradually absorb Oceanus Folk’s emotive storytelling and layered acoustics\n\nThis evidence suggests that Oceanus Folk has become a trans-genre catalyst, capable of instigating genre-wide innovation cycles rather than merely linear transmission.\n\n\n\nUsing the Top-N Influenced Artists module, we evaluated the extent of Oceanus Folk’s artistic legacy through quantitative metrics.\n\n\n\n\n\n\n\n\n\n\n\n\n\nArtist\nGenre\nInfluence Count\nNotes\n\n\n\n\nRipples and Whispers\nIndie Folk\n50+\nMajor inheritor of stylistic DNA\n\n\nEcho Chamber Records\nSynthpop\n~10\nCross-genre converter\n\n\nBeyond Our Limitations\nOceanus Folk\n~12\nMaintains intra-genre continuity\n\n\n\n\n\n\n\n\nArtists such as Spiegel Harmony, Trembling Syringe, and Clocktower Cadence reflect cross-pollination between Oceanus Folk and electronic/ambient genres\nLesser-known indie entities like Grip and Grace, Cresens Studios, and Hauteur-Core Records indicate diffusion into the long tail of the music industry\nThe inclusion of Unique Frequencies within Synthpop suggests that Oceanus Folk influence is not genre-bound, but adaptable to production modality\n\n\n\n\n\nThe Layered Genre-Artist Sankey Diagram operationalizes influence as directional flows. Key structural transitions include:\n\n\n\n\nOceanus Folk → Ripples and Whispers → Indie Folk\nRepresents the most direct and voluminous influence transition\n\n\n\n\n\nOceanus Folk → Echo Chamber Records → Synthpop\nIllustrates genre expansion into electronic and digital domains\nFeedback Loops (e.g., Ripples and Whispers → Echo Chamber Records → Oceanus Folk):\nReveal recursive dynamics, suggesting Oceanus Folk evolves by reabsorbing its own stylistic exports\n\nThis multilayered flow analysis supports the thesis that Oceanus Folk acts both as a source and recipient of innovation—a genre that circulates influence bi-directionally.\nConclusion\nThe Genre Diffusion analysis presents Oceanus Folk as a dynamic, recursive, and outwardly radiating genre. From 1990 to 2025, it has transitioned from a niche musical identity into a genre engine—influencing artists across temporal phases and stylistic boundaries.\nKey takeaways include:\n\nThe 2012 inflection point marks a statistically and structurally significant transformation in the genre’s influence behavior\nOceanus Folk’s motifs are highly transferable, allowing it to infiltrate diverse genres such as Synthpop, Indie Folk, and Darkwave\nThe genre exhibits a non-linear, cyclical propagation pattern, driven by both artistic innovation and network connectivity\n\n\nIn sum, Oceanus Folk is not a static genre classification but a living influence ecosystem—continuously absorbing, emitting, and evolving across the musical landscape.\n\n\n\n\n\n\n\n\nThe radar comparison clearly shows that Sailor Shift outperforms other emerging artists such as Kimberly Snyder and Szymon Pyć across all four talent dimensions—PageRank, Degree Centrality, Style Similarity, and Notable Works Count. This indicates she is not only globally influential within the music network (high PageRank) and highly connected to other artists (high Degree Centrality), but also stylistically aligned with the Oceanus Folk genre and prolific in producing notable works. In contrast, Kimberly and Szymon demonstrate more limited profiles, suggesting that while they may be upcoming talents, they are still in the early stages of influence building. Sailor Shift’s dominance across all axes solidifies her position as a benchmark figure for rising stars within the genre.\nYearly Heatmap:\n\nThe heatmap illustrates a clear surge in song production across niche genres such as Oceanus Folk, Lo-Fi Electronica, and Indie Folk starting around 2010, with peaks occurring between 2021 and 2028. These genres consistently show high song counts, as indicated by the bright green to yellow cells, signaling a period of rapid diffusion and growing popularity. In contrast, more experimental genres like Post-Apocalyptic Folk and Avant-Garde Folk remain relatively sparse, suggesting they are still emerging or niche.\nThis pattern implies that Sailor Shift’s influence likely aligns with the upward trajectory of these central genres, and her activity may have played a role in catalyzing the surge in creative output\n\n\n\n\nThe cumulative trend chart highlights a remarkable surge in Dream Pop, which reached 733 cumulative works by 2030, far outpacing other genres. This aligns with the earlier yearly heatmap, where Dream Pop, Indie Folk, and Indie Pop showed concentrated activity between 2015 and 2030, indicating their dominant role in shaping the genre landscape. This rapid growth suggests strong creative momentum and possibly deeper community or industry support behind these styles. Such genre trajectories imply that influential artists—like Sailor Shift—may have played a key role in amplifying these genre trends through their collaborations and impact."
  },
  {
    "objectID": "Findings.html#insights-into-sailor-shift-oceanus-folk-and-the-next-generation-of-rising-stars",
    "href": "Findings.html#insights-into-sailor-shift-oceanus-folk-and-the-next-generation-of-rising-stars",
    "title": "Findings of Mini-Challenge 1",
    "section": "",
    "text": "Through a series of visual analytics and network-based visualizations, we have uncovered deep insights into Sailor Shift’s career, her influence across genres, and the evolving identity of the Oceanus Folk community. Below is a synthesis of findings drawn from interactive exploration of the musical influence graph:\n\n\n\n\n\n\n\n\n\n\n\nFrom the 2nd network depth:\nAcross the three visualizations of second-degree influence, we gain a nuanced understanding of how Sailor Shift’s artistry has been shaped by the broader musical landscape. The first two plots show that she draws inspiration from a diverse and layered mix of songs, albums, musical groups, and individuals, with influence types ranging from InStyleOf and PerformerOf to CoverOf, InterpolatesFrom, and LyricistOf. These edge types reveal her stylistic adaptability and lyrical depth, often engaging in reinterpretation and reimagination rather than imitation.\nThe third visualization, which focuses on notable nodes, highlights that many of Sailor Shift’s most impactful influences stem from high-profile works and creators. This suggests that her rise may be partially driven by alignment with established, reputable artists and their stylistic legacies. The density of notable nodes indicates that she has strategically positioned herself within a web of influential musical threads — absorbing, reworking, and echoing their signature styles.\nTogether, these visualizations depict Sailor Shift as not only a product of the Oceanus Folk genre but also a curator of its finest traditions, synthesizing both mainstream and niche influences into a sound that feels authentic yet elevated. Her indirect influences — passed through highly notable intermediaries — demonstrate how a rising artist can build cultural credibility while also innovating within tradition.\n\nFrom the 3rd network depth:\nBy expanding the influence network to three layers, we uncover the deep and expansive web of creative lineage behind Sailor Shift’s music. This view illustrates not just who directly influenced her, but also who influenced those influencers — providing a glimpse into the cultural and artistic ancestry of her sound. The network becomes more interconnected and dense, with many secondary and tertiary songs, albums, and artists feeding into the evolution of her musical identity.\n\n\n\n\nThe graph illustrates that Sailor Shift’s musical influence radiates outward through diverse roles: as a producer, lyricist, stylistic inspiration, and even being referenced lyrically. She not only performs but actively shapes the creative identity of collaborators like Cassian Storm, The Phantom Operators, and Claire Holmes.\nThe presence of multiple record labels (e.g., Oceanic Records, Coastal Harmony Studios) and musical groups demonstrates that Sailor’s influence extends beyond individuals to organizational and stylistic levels. Several collaborators such as Daniel O’Connell and Silver Veil also serve as bridges to larger creative clusters, amplifying her reach.\nNotably, the graph also highlights two-way influence, as some connections (like InterpolatesFrom and LyricalReferenceTo) suggest mutual artistic dialogue rather than unidirectional impact.\n\n\n\n\n\n\nThe timeline reveals that Sailor Shift’s collaborative activities have grown more frequent and diversified over time, particularly in the role of Performer (blue). Her lyricist collaborations (green) remained consistent but less frequent, while composer roles (red) were not prominent in this specific view.\n\n\nThis suggests that as her career progresses, she becomes increasingly engaged as a performer across a variety of projects, possibly reflecting growing demand for her unique artistic voice. The timeline also hints at a potential creative peak or resurgence around 2030–2035, with a surge in collaborations.\n\n\n\n\nSailor Shift’s influence on the music landscape is both broad and genre-defining, with Psychedelic Rock emerging as the most impacted genre, suggesting her strong association with experimental and atmospheric sounds. She engages with others primarily as a Performer (99 instances), far surpassing roles like LyricistOf or ComposerOf, signaling her performance-driven influence. Over time, as seen in the Collaboration Heatmap, her performer-based collaborations peak around 2030–2032, while her lyrical and compositional collaborations remain more selective and episodic. The data highlights her as a genre-shaping artist, with both direct and indirect forms of influence—such as InStyleOf and DirectlySamples—showing her artistic footprint across multiple dimensions.\n\n\n\n\n\nThe visualizations reveal that Sailor Shift is the most active and central collaborator in the network, with the highest number of collaboration counts—especially as a PerformerOf, followed by LyricistOf and ComposerOf roles. Among all artists, she stands out significantly in terms of connectivity, underscoring her leading role in shaping musical outputs. The bar chart also shows 116 notable works associated with her and a total of 185 connected nodes, indicating both breadth and depth of influence across the music ecosystem. These metrics highlight her prominent footprint in the community and position her as a pivotal figure in the Oceanus Folk genre and beyond.\n\n\n\n\nThe diffusion of musical influence represents a crucial mechanism for understanding genre evolution, artistic innovation, and cross-style hybridity. In this section, we investigate the genre Oceanus Folk as both a progenitor and recipient of stylistic influence using EchoScope™’s Genre Diffusion Tracker. Specifically, we analyze the directional impact of Oceanus Folk before and after the fame of Sailor Shift in 2012, and examine how this genre propagates across musical ecosystems through influence networks, genre timelines, and layered Sankey transitions.\n\n\n\nTo understand the structural propagation of Oceanus Folk, we employed 1-hop influence graphs filtered by time (1990–2025) and node type (track-level granularity). The networks were divided temporally by the Sailor Shift Fame Year (2012).\n\n\n\nPrior to 2012, the Pre-Fame Influence Network demonstrates a localized and compact topology, characterized by genre-internal propagation. Central nodes such as:\n\n“Beyond Our Limitations”\n“Exile’s Whisper”\n“Whispers of a Wandering Soul”\n\nemerge as formative tracks within a tightly coupled cluster. The dominance of green and yellow nodes (Oceanus Folk tracks) suggests that the genre’s early phase was self-referential—marked by genre consolidation rather than cross-pollination.\n\n\n\nFollowing Sailor Shift’s rise to fame, the Post-Fame Network exhibits a marked increase in node volume, diversity, and centrality dispersion. Notably, Oceanus Folk begins to act as a genre-exporting hub, influencing a broader set of genres including:\n\nIndie Folk (e.g., Ripples and Whispers, Beyond Our Limitations)\nSynthpop (e.g., Echo Chamber Records, Unique Frequencies)\nAlternative Rock (e.g., Destiny’s Call)\n\nThe emergence of blue and pink nodes indicates a transition from genre insulation to genre integration, where Oceanus Folk motifs begin embedding within distinct musical contexts.\n\n\n\n\nThe Timeline Trend Visualization provides longitudinal evidence of genre diffusion intensity. From 1990 to 2010, Oceanus Folk’s influence remained relatively stable, rarely surpassing 100 affected nodes per year. Post-2012, however, a periodic spike pattern is observable, peaking in:\n\n2012 (coinciding with Sailor Shift’s fame)\n2015, 2018, 2021, 2023 — with affected node counts exceeding 250–300\n\n\n\n\nFrom the area chart, several genres show coordinated upward trends aligned with Oceanus Folk’s diffusion spikes:\n\nAvant-Garde Folk and Darkwave show strong co-movement, suggesting a textural or thematic compatibility\nAlternative Rock and Desert Rock gradually absorb Oceanus Folk’s emotive storytelling and layered acoustics\n\nThis evidence suggests that Oceanus Folk has become a trans-genre catalyst, capable of instigating genre-wide innovation cycles rather than merely linear transmission.\n\n\n\nUsing the Top-N Influenced Artists module, we evaluated the extent of Oceanus Folk’s artistic legacy through quantitative metrics.\n\n\n\n\n\n\n\n\n\n\n\n\n\nArtist\nGenre\nInfluence Count\nNotes\n\n\n\n\nRipples and Whispers\nIndie Folk\n50+\nMajor inheritor of stylistic DNA\n\n\nEcho Chamber Records\nSynthpop\n~10\nCross-genre converter\n\n\nBeyond Our Limitations\nOceanus Folk\n~12\nMaintains intra-genre continuity\n\n\n\n\n\n\n\n\nArtists such as Spiegel Harmony, Trembling Syringe, and Clocktower Cadence reflect cross-pollination between Oceanus Folk and electronic/ambient genres\nLesser-known indie entities like Grip and Grace, Cresens Studios, and Hauteur-Core Records indicate diffusion into the long tail of the music industry\nThe inclusion of Unique Frequencies within Synthpop suggests that Oceanus Folk influence is not genre-bound, but adaptable to production modality\n\n\n\n\n\nThe Layered Genre-Artist Sankey Diagram operationalizes influence as directional flows. Key structural transitions include:\n\n\n\n\nOceanus Folk → Ripples and Whispers → Indie Folk\nRepresents the most direct and voluminous influence transition\n\n\n\n\n\nOceanus Folk → Echo Chamber Records → Synthpop\nIllustrates genre expansion into electronic and digital domains\nFeedback Loops (e.g., Ripples and Whispers → Echo Chamber Records → Oceanus Folk):\nReveal recursive dynamics, suggesting Oceanus Folk evolves by reabsorbing its own stylistic exports\n\nThis multilayered flow analysis supports the thesis that Oceanus Folk acts both as a source and recipient of innovation—a genre that circulates influence bi-directionally.\nConclusion\nThe Genre Diffusion analysis presents Oceanus Folk as a dynamic, recursive, and outwardly radiating genre. From 1990 to 2025, it has transitioned from a niche musical identity into a genre engine—influencing artists across temporal phases and stylistic boundaries.\nKey takeaways include:\n\nThe 2012 inflection point marks a statistically and structurally significant transformation in the genre’s influence behavior\nOceanus Folk’s motifs are highly transferable, allowing it to infiltrate diverse genres such as Synthpop, Indie Folk, and Darkwave\nThe genre exhibits a non-linear, cyclical propagation pattern, driven by both artistic innovation and network connectivity\n\n\nIn sum, Oceanus Folk is not a static genre classification but a living influence ecosystem—continuously absorbing, emitting, and evolving across the musical landscape.\n\n\n\n\n\n\n\n\nThe radar comparison clearly shows that Sailor Shift outperforms other emerging artists such as Kimberly Snyder and Szymon Pyć across all four talent dimensions—PageRank, Degree Centrality, Style Similarity, and Notable Works Count. This indicates she is not only globally influential within the music network (high PageRank) and highly connected to other artists (high Degree Centrality), but also stylistically aligned with the Oceanus Folk genre and prolific in producing notable works. In contrast, Kimberly and Szymon demonstrate more limited profiles, suggesting that while they may be upcoming talents, they are still in the early stages of influence building. Sailor Shift’s dominance across all axes solidifies her position as a benchmark figure for rising stars within the genre.\nYearly Heatmap:\n\nThe heatmap illustrates a clear surge in song production across niche genres such as Oceanus Folk, Lo-Fi Electronica, and Indie Folk starting around 2010, with peaks occurring between 2021 and 2028. These genres consistently show high song counts, as indicated by the bright green to yellow cells, signaling a period of rapid diffusion and growing popularity. In contrast, more experimental genres like Post-Apocalyptic Folk and Avant-Garde Folk remain relatively sparse, suggesting they are still emerging or niche.\nThis pattern implies that Sailor Shift’s influence likely aligns with the upward trajectory of these central genres, and her activity may have played a role in catalyzing the surge in creative output\n\n\n\n\nThe cumulative trend chart highlights a remarkable surge in Dream Pop, which reached 733 cumulative works by 2030, far outpacing other genres. This aligns with the earlier yearly heatmap, where Dream Pop, Indie Folk, and Indie Pop showed concentrated activity between 2015 and 2030, indicating their dominant role in shaping the genre landscape. This rapid growth suggests strong creative momentum and possibly deeper community or industry support behind these styles. Such genre trajectories imply that influential artists—like Sailor Shift—may have played a key role in amplifying these genre trends through their collaborations and impact."
  },
  {
    "objectID": "Storyboard.html",
    "href": "Storyboard.html",
    "title": "EchoScope™ Prototype Storyboard",
    "section": "",
    "text": "EchoScope™ is a visual analytics prototype designed to analyze artist influence, genre diffusion, and talent discovery through interactive dashboards and knowledge graph exploration.\n\n\n\n\nBefore diving into the individual UI panels, here’s a quick summary of the R packages we load and the core data-preprocessing steps used throughout EchoScope™. Click Show to expand.\n\n\n\nShow libraries & data-prep code\n\n# ——— R Packages ———\n\n# ——— Shiny & UI ———\nlibrary(shiny)\nlibrary(shinydashboard)\nlibrary(shinyWidgets)\n\n# ——— Data wrangling ———\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(jsonlite)\nlibrary(lubridate)\nlibrary(scales)\n\n# ——— Tables & plotting ———\nlibrary(DT)\nlibrary(ggplot2)\nlibrary(plotly)\n\n# ——— Network analysis ———\nlibrary(visNetwork)\nlibrary(tidygraph)\nlibrary(igraph)\n\n# ——— Influence Graph Data Prep ———\n\n# 1) Load graph JSON\nkg        &lt;- fromJSON(\"data/MC1_graph.json\")\nnodes_tbl &lt;- as_tibble(kg$nodes)\nedges_tbl &lt;- as_tibble(kg$links)\n\n# 2) Build index map\nid_map &lt;- tibble(\n  id    = nodes_tbl$id,\n  index = seq_len(nrow(nodes_tbl))\n)\n\n# 3) Translate source/target → from/to\nedges_tbl_graph &lt;- edges_tbl %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;% rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;% rename(to   = index) %&gt;%\n  filter(!is.na(from), !is.na(to))\n\n# 4) Create tidygraph object\ng_tbl &lt;- tbl_graph(\n  nodes    = nodes_tbl %&gt;% rename(node_name = name) %&gt;% mutate(index = row_number()),\n  edges    = edges_tbl_graph,\n  directed = TRUE\n)\n\n# 5) Subnetwork extraction helper\nextract_subnetwork &lt;- function(graph, node_name,\n                               distance = NULL,\n                               direction = c(\"all\",\"in\",\"out\"),\n                               edge_types = NULL,\n                               node_types = NULL) {\n  direction &lt;- match.arg(direction)\n  v_idx     &lt;- which(V(graph)$name == node_name)\n  vids      &lt;- ego(graph, v_idx, order = distance %||% length(graph),\n                   mode = direction)[[1]]\n  sg        &lt;- induced_subgraph(graph, vids)\n  nd        &lt;- as_data_frame(sg, what = \"vertices\")\n  ed        &lt;- as_data_frame(sg, what = \"edges\")\n  if (!is.null(edge_types)) ed &lt;- ed[ed$`Edge Type` %in% edge_types, ]\n  if (!is.null(node_types)) nd &lt;- nd[nd$`Node Type` %in% node_types, ]\n  tidygraph::tbl_graph(nodes = nd, edges = ed, directed = is_directed(graph))\n}\n\n# 6) Talent scoring function\nprepare_talent_score_from_graph &lt;- function(g_tbl) {\n  nodes &lt;- as_tibble(g_tbl, active = \"nodes\")\n  edges &lt;- as_tibble(g_tbl, active = \"edges\")\n\n  # Identify notable works\n  notable_work_ids &lt;- nodes %&gt;%\n    filter(`Node Type` %in% c(\"Song\",\"Album\"), notable == TRUE) %&gt;%\n    pull(index)\n\n  # Identify contributing persons\n  person_edge_types &lt;- c(\"PerformerOf\",\"ComposerOf\",\"ProducerOf\",\"LyricistOf\")\n  contributing_persons &lt;- edges %&gt;%\n    filter(to %in% notable_work_ids, `Edge Type` %in% person_edge_types) %&gt;%\n    pull(from) %&gt;% unique()\n\n  # Prepare person dataframe with recency & label\n  person_df &lt;- nodes %&gt;%\n    filter(`Node Type` == \"Person\") %&gt;%\n    select(index, label = node_name, notoriety_date, genre) %&gt;%\n    mutate(\n      notoriety_year   = as.numeric(substr(notoriety_date,1,4)),\n      notoriety_recency = pmax(0, 1 - (2025 - notoriety_year) / 20),\n      notable_label     = as.integer(index %in% contributing_persons)\n    )\n\n  # Add graph features\n  graph_feat &lt;- g_tbl %&gt;%\n    activate(nodes) %&gt;%\n    mutate(degree = centrality_degree(), pagerank = centrality_pagerank())\n  feat &lt;- as_tibble(graph_feat, active = \"nodes\") %&gt;%\n    filter(`Node Type` == \"Person\") %&gt;%\n    select(index, degree, pagerank)\n\n  # Merge features\n  features &lt;- person_df %&gt;%\n    left_join(feat, by = \"index\") %&gt;%\n    mutate(across(c(degree,pagerank,notoriety_recency), ~replace_na(.,0)))\n\n  # Train logistic regression\n  if (nrow(features) &lt; 10 || length(unique(features$notable_label)) &lt; 2)\n    stop(\"Insufficient training data or no positive/negative samples.\")\n  model &lt;- glm(notable_label ~ degree + pagerank + notoriety_recency,\n               data = features, family = binomial)\n\n  # Predict and return scored data frame\n  features$predicted_prob &lt;- predict(model, newdata = features, type = \"response\")\n  features %&gt;%\n    arrange(desc(predicted_prob)) %&gt;%\n    mutate(id = index) %&gt;%\n    select(id, label, genre, degree, pagerank,\n           notoriety_year, notoriety_recency,\n           predicted_prob, notable_label)\n}\n\n# Example: generate talent_score_df\ntalent_model_result &lt;- prepare_talent_score_from_graph(g_tbl)\ntalent_score_df      &lt;- talent_model_result\n\n\n\n\n\n\nThis section illustrates the main propose user interaction journey through the EchoScope™ platform.\n\nFlow Structure:\n1. Home – Introduction and orientation\n2. Influence Analysis – Explore influence networks\n3. Genre Diffusion – Track genre trends over time\n4. Talent Radar – Compare and discover emerging talent\n5. Trend Dashboard – Export macro-level insights\n📸 EchoScope™ Dashboard Sidebar Navigation Screenshot\n\n\n\n\n\n\n\nWelcome users and introduce the EchoScope™ platform.\n\n\n\nHomepage with a welcome message and orientation notes.\n📸 Screenshot of Home Page\n\n\n\nShow code\n\ntabItem(\n  tabName = \"home\",\n  fluidRow(\n    box(\n      width = 12, status = \"primary\", solidHeader = FALSE,\n      HTML('&lt;h1&gt;Welcome!&lt;/h1&gt;&lt;p&gt;EchoScope™ is a web-based visual analytics prototype...&lt;/p&gt;')\n    )\n  )\n)\n\n\n\n\n\n\nSection Purpose: Understanding Sailor Shift’s Artistic Influence Network\nThis section presents a structured exploration of Sailor Shift’s artistic connections, using network analysis to examine three key perspectives:\n\nWho has Sailor Shift been influenced by?\n\nExplore direct and indirect artistic influences on Sailor Shift over time.\nWho has she collaborated with and influenced?\n\nIdentify collaborators and assess how her work has directly or indirectly shaped others.\nHer Influence on the Oceanus Folk Community\n\nFocus on how her influence has spread within the Oceanus Folk genre, including both direct and second-level indirect pathways.\n\n📸 Screenshot of Influence Graph Panel\n\n1：We are going to use the tabset panel to focus on three key perspectives of influence analysis；\n2 : Each section provides an overview introduction to the influence network from a specific perspective, helping users better understand the background and objectives of this dashboard.\n\n\nThe main dashboard will show into four parts Interactive Filter Panel, Plot, Legend Panel, Interactive Data Table :\n\nInteractive Filter Panel :\n\nObjective : To empower users to efficiently explore and narrow down the influence network of Sailor Shift by providing intuitive and responsive filtering options.\nPlanned Filter Components & Intended Functionality\n\n\n\n\n\n\n\n\nFilter\nUser Interaction\nPlanned Purpose\n\n\n\n\nSelect Node Type\nMulti-select (e.g., Album, Person, Song, RecordLabel, etc.)\nFilters the network to show only selected entity types as nodes.\n\n\nSearch Node Name\nDropdown or typeahead search (e.g., “Brooke Olson”)\nFocuses the network graph on the selected node, zooming in automatically.\n\n\nSelect Edge Type\nMulti-select (e.g., ComposerOf, Interpolates, etc.)\nFilters edges by relationship type to limit visual noise and highlight key links.\n\n\nIs Notable?\nRadio buttons (All / TRUE / FALSE)\nFilters nodes by whether they are tagged as “notable” to emphasize known artists.\n\n\nSelect Genre(s)\nMulti-select (e.g., Alternative Rock, Avant-Garde Folk, etc.)\nEnables genre-based filtering to tailor the view to specific music categories.\n\n\nRelease Year Range\nRange slider (1983–2038) + “Select All Years” button\nRestricts nodes by their associated release year, helping with temporal filtering.\n\n\nSelect Network Depth (from Sailor Shift)\nRange slider (1–3) + “Select All network” button\nControls how many layers of influence (direct and indirect) are displayed.\n\n\n\nInteraction Design Considerations\n\nResponsiveness: Each filter is reactive and updates the network graph in real time.\nPerformance Notices: Informational messages are placed beneath heavier operations (e.g., select all years/network depth) to prepare the user for slight delays.\nEnhanced UX: All dropdowns use searchable pickerInputs with “actions-box” for select/deselect all, streamlining multi-choice workflows.\n\n2.Planned Visualization Panel: Influence Plot & Summary Statistics and the related legends\nObjective\nTo dynamically visualize Sailor Shift’s influence network and provide quantitative summaries that respond in real-time to user-selected filters.And Influence plot, we plan to use the network plot to see the influence and for the Statistics, we will use the bar chart.\nNetwork Plot & Summary plan\n\n\n\n\n\n\n\n\nTab\nContent Type\nPlanned Interaction\n\n\nInfluence Network\nPlan to usevisNetwork graph\nDisplays a dynamic node-link network showing direct and indirect influence.\n\n\n\n\nHover reveals details; click highlights sub-network.\n\n\n\n\nResponds in real time to filters in the left panel (node type, genre, years, etc.).\n\n\nSummary Statistics\nPlan to use plotly interactive bar chart\nShows count of edges by relationship type (e.g., ComposerOf, PerformerOf, etc.).\n\n\n\n\nAggregated metrics update live as filters change.\n\n\n\nPropose outcome of the plots:\nFor the legends, we will also add some interactions into the summary bar chart to find more information for the audience and in order to make more clearly to understand the network, the legends will also show the node types and the edge types for references.\n3.Planned Table Panel: Influence Relationship Details\nObjective\nTo provide a tabular view of the filtered influence relationships, allowing users to explore details at a granular level, complementing the network graph.\nDesign & Features\nFunctionality plan:\n\nPaginated view with adjustable row count (5, 10, 25, 50, 100)\nSearch bar for keyword-based filtering (e.g., node name, genre)\nSortable columns for customized sorting (e.g., by release year or relationship type)\n\nDynamic Interaction\n\nTable will updates in real time based on all applied filters (e.g., node type, genre, year range).\nSupports detailed exploration and verification of insights observed in the visual graph and summary statistics.\nPlan to add downloadable CSV export or row click-to-expand options in the future.\n\nHere are the propose skeleton of the first part of the network influence UI design.\n\n\nUI Design + Server Planning Code\n\ntabItem(\n  tabName = \"influenced\"/\"Impact & Collaborated\"/\"Community influence\",\n  fluidRow(\n    column(4, wellPanel(\n      #Filter Design\n      pickerInput(\"node_type\", \"Select Node Type\", choices = ...),\n      pickerInput(\"edge_type\", \"Select Edge Type\", ...),\n      helpText(tagList(),...),\n      radioButtons(inputId = \"notable_filter\",...),\n      pickerInput(inputId = \"genre_filter\",label = \"Select Genre(s)\",...),\n      sliderInput(\"release_range\", \"Release Year Range\", ...),\n      actionButton(\"release_range_btn\", \"Select All Years\"),\n      sliderInput(\"network_depth\", \"Network Depth\", ...)\n    )),\n    column(8, visNetworkOutput(\"directGraph\", height = \"700px\",...))\n    column(DTOutput(\"directTable\", ...)\n    \n   )\n  )\n)\n\nserver &lt;- function(input, output, session) {\n  \n  #1 Dynamic Filtering of Edges and Nodes\n  \n  - filtered_edges()         # Filter edges based on network depth and edge type\n  - filtered_nodes()         # Filter nodes based on valid IDs and input criteria\n  - observe()                # Dynamically update node_name picker choices\n  \n  #2 Network Graph Rendering and Interaction\n  \n  - output$directGraph       # Render visNetwork main graph\n  - observeEvent(input$node_name)       # Focus and highlight on selected node\n  - observeEvent(input$notable_filter)  # Highlight nodes based on \"Notable\" filter\n  \n  #3 Quick Interaction Buttons\n  \n  - observeEvent(input$release_range_btn)     # Reset release year slider to full range\n  - observeEvent(input$network_depth_btn)     # Set network depth to maximum (e.g., 3)\n  \n  #4 Data Table Output Section (DT::datatable)\n  \n  - output$directTable       # Display filtered edge data with node names, types, genres, and dates\n  \n  #5 Summary Statistics Visualization Output\n  \n  - output$groupEdgeBarPlot  # Render grouped bar chart (Node Type × Edge Type) using ggplotly\n  - output$barInfo           # Display tooltip text on bar click (plotly_click event)\n\n}\n\n\n\n\n\n🎯 Module Purpose\nThis module explores how the genre Oceanus Folk has influenced the creation and spread of songs and albums over time. Using a dynamic network and Sankey diagram, we visualize genre diffusion pathways, including direct and indirect influence, along with their temporal evolution.\n\n📝 Use case: A music analyst or cultural researcher can trace how Oceanus Folk catalyzed the emergence of related genres, artists, and works across decades.\n\n\n🧭 Interface Overview\n📸 Screenshot of Genre Diffusion Panel\n\n① Left Panel: Control Inputs\nThis panel allows users to refine the visualization by setting key filters:\n\nMain Genre Selector: Defaults to Oceanus Folk. Users can switch to explore other genres if applicable.\nYear Range Slider: Restricts the dataset by release year to focus on specific time windows.\nNode Type Selector: Filters the visualization to show only Song or Album nodes (ignores irrelevant types like Person).\nHop Depth (1-hop / 2-hop): Determines the depth of network exploration from the main genre (direct vs indirect influence).\n\nThese inputs dynamically control the center visualizations to support targeted analysis.\n② Center Panel Top: Timeline Trend Panel\nThis stacked area chart visualizes how different genres have been influenced by Oceanus Folk over time.\n\nX-axis: Year of release\n\nY-axis: Number of works influenced\n\nFill Color: Receiving genre\n\nInsights Provided:\n\nObserve stylistic waves: Is influence steady, or does it spike in certain periods?\nDetect genre surges: Which genres became more prominent over time due to Oceanus Folk?\nStudy response lag: How long after Oceanus Folk’s rise did other genres begin to echo it?\n\nThe year slider narrows the temporal scope for closer inspection.\n③ Center Panel Middle: Genre Influence Network\nThis network graph visualizes works and genres influenced by Oceanus Folk.\n\nNodes: Songs or albums with genre tags\n\nEdges: Influence links (e.g., stylistic references, covers)\n\nGrouping: Nodes colored by genre\n\nHop Depth: 1-hop shows immediate connections; 2-hop expands to indirect pathways\n\nInsights Provided:\n\nSee structural spread: Starburst (centralized) vs Chain (progressive) diffusion\nDiscover genre bridges: Nodes that link distant styles\nAnalyze neighborhood scope: How far does Oceanus Folk’s influence travel?\n\nClicking a node reveals more info in the detail panel.\n④ Right Panel: Detail Panel\nThis section updates when a node is selected in the network or Sankey diagram.\nDetails shown: - Name of the node (song or album)\n- Representative Works (if available)\n- Active Year (release year)\n- Sailor Shift Connection: Whether the node has a collaboration or stylistic link with Sailor Shift\nPurpose:\n\nEnable deep-dives into specific works\nConnect micro-level detail with macro-level diffusion patterns\nSupport contextual storytelling around influential pieces or collaborators\n\n⑤ Center Panel Bottom: Genre Influence Backflow (Sankey Diagram)\nThis Sankey diagram shows reverse influence — how other genres influenced Oceanus Folk.\n\nSource: External genres (e.g., Jazz, Psychedelic)\n\nTarget: Oceanus Folk\n\nLink Width: Frequency or weight of connections\n\nInsights Provided:\n\nUncover external roots: What genres shaped Oceanus Folk’s evolution?\nSpot dominant contributors: Are there a few strong influencers or many subtle ones?\nExplore bidirectional influence: Music genres are not static — Oceanus Folk both influences and is influenced.\n\nThis module highlights how cultural exchange reshapes a genre over time.\n⑤ Right Panel: Detail Panel\nThis section updates when a node is selected in the network or Sankey diagram.\nDetails shown: - Name of the node (song or album)\n- Representative Works (if available)\n- Active Year (release year)\n- Sailor Shift Connection: Whether the node has a collaboration or stylistic link with Sailor Shift\nPurpose:\n\nEnable deep-dives into specific works\nConnect micro-level detail with macro-level diffusion patterns\nSupport contextual storytelling around influential pieces or collaborators\n\n\n\nUI Design + Server Planning Code\n\n    tabItem(tabName = \"genre\",\n            fluidRow(\n              \n              column(width = 3,\n                     box(title = \"Control Panel\", status = \"info\", solidHeader = TRUE, width = 13,\n                         selectInput(\"mainGenre\", \"Main Genre\",\n                                     choices = sort(unique(na.omit(all_nodes$genre))),\n                                     selected = \"Oceanus Folk\"\n                         ),\n                         sliderInput(\"yearRange\", \"Year Range:\",\n                                     min = 1983, max = 2038, value = c(1990, 2025), sep = \"\"\n                         ),\n                         selectInput(\"nodeType\", \"Node Type:\",\n                                     choices = c(\"Song (Track)\" = \"Song\", \"Album\" = \"Album\"),\n                                     selected = \"Song\"\n                         ),\n                         radioButtons(\"hopDepth\", \"Influence Path Depth:\",\n                                      choices = c(\"1-hop\" = 1, \"2-hop\" = 2), selected = 1\n                         )\n                     )\n              ),\n              \n              column(width = 9,\n                     fluidRow(\n                       column(width = 8,\n                              box(title = \"Timeline Trend\", status = \"primary\", solidHeader = TRUE, width = 14,\n                                  plotlyOutput(\"trendPlot\", height = \"200px\")\n                              ),\n                              box(title = \"Genre Influence Network\", status = \"primary\", solidHeader = TRUE, width = 14,\n                                  visNetworkOutput(\"genreNetwork\", height = \"250px\")\n                              ),\n                              box(title = \"Genre Influence Backflow\", status = \"primary\", solidHeader = TRUE, width = 14,\n                                  sankeyNetworkOutput(\"genreSankey\", height = \"250px\")\n                              )\n                       ),\n                       column(width = 4,\n                              box(title = \"Detail Panel\", status = \"primary\", solidHeader = TRUE, width = 12,\n                                  uiOutput(\"detailPanel\")\n                              )\n                       )\n                     )\n              )\n            )\n    )\n    \n#### Sever Part ######\ngraph_data &lt;- fromJSON(\"data/MC1_graph.json\")\n    nodes_df &lt;- as.data.frame(graph_data$nodes)\n    edges_df &lt;- as.data.frame(graph_data$links)\n    \n    all_nodes &lt;- nodes_df\n    \n    # Reactive filtering: filter nodes and edges based on user input\n    filtered &lt;- reactive({\n      \n      nodes &lt;- all_nodes \n      edges &lt;- edges_df\n      \n      # Only keep nodes that are Song or Album and have genre\n      nodes &lt;- nodes %&gt;%\n        filter(`Node Type` %in% c(\"Song\", \"Album\"), !is.na(genre))\n      \n      # Filter by year (assumes release_date is year string)\n      yr &lt;- input$yearRange\n      if (!is.null(yr)) {\n        nodes &lt;- nodes %&gt;%\n          filter(!is.na(release_date) & as.numeric(release_date) &gt;= yr[1] & \n                   as.numeric(release_date) &lt;= yr[2])\n      }\n      \n      # Filter by node type\n      if (!is.null(input$nodeType) && input$nodeType != \"\") {\n        nodes &lt;- nodes %&gt;% filter(`Node Type` == input$nodeType)\n      }\n      \n      # Join genre info\n      edges &lt;- edges %&gt;%\n        left_join(nodes %&gt;% select(id, genre), by = c(\"source\" = \"id\")) %&gt;%\n        rename(source_genre = genre) %&gt;%\n        left_join(nodes %&gt;% select(id, genre), by = c(\"target\" = \"id\")) %&gt;%\n        rename(target_genre = genre)\n      \n      list(nodes = nodes, edges = edges)\n    })\n    \n    observe({\n      updateSelectInput(session, \"mainGenre\",\n                        choices = sort(unique(na.omit(nodes_df$genre))),\n                        selected = \"Oceanus Folk\")\n    })\n    \n    # Timeline trend plot: count genre nodes influenced by Oceanus Folk per year\n    output$trendPlot &lt;- renderPlotly({\n      data &lt;- filtered()$nodes\n      if (nrow(data) == 0) return(NULL)\n      # Extract year and count number of nodes per genre per year\n      df &lt;- data %&gt;% \n        filter(!is.na(release_date)) %&gt;%\n        mutate(Year = as.numeric(release_date)) %&gt;%\n        group_by(Year, genre) %&gt;%\n        summarize(Count = n(), .groups = 'drop')\n      if (nrow(df) == 0) return(NULL)\n      # Plot stacked area chart\n      p &lt;- ggplot(df, aes(x = Year, y = Count, fill = genre)) +\n        geom_area(alpha = 0.6) +\n        labs(x = \"Year\", y = \"Affected Count\", fill = \"Genre\") +\n        theme_minimal()\n      ggplotly(p)\n    })\n    \n    # Genre influence network: centered on Oceanus Folk showing influence connections\n    output$genreNetwork &lt;- renderVisNetwork({\n      data &lt;- filtered()\n      nodes &lt;- data$nodes\n      edges &lt;- data$edges\n      if (nrow(nodes) == 0 || nrow(edges) == 0) return(NULL)\n      \n      main_genre &lt;- input$mainGenre\n      \n      # 用 all_nodes 获取主 genre 节点 ID\n      main_ids &lt;- all_nodes %&gt;% filter(genre == main_genre) %&gt;% pull(id)\n      if (length(main_ids) == 0) return(NULL)\n      \n      if (input$hopDepth == 1) {\n        edges_sub &lt;- edges %&gt;% filter(source %in% main_ids | target %in% main_ids)\n        nodes_sub &lt;- nodes %&gt;% filter(id %in% unique(c(edges_sub$source, edges_sub$target)))\n      } else {\n        one_hop &lt;- edges %&gt;% filter(source %in% main_ids | target %in% main_ids) %&gt;%\n          pull(source, target) %&gt;% unlist() %&gt;% unique()\n        edges_sub &lt;- edges %&gt;% filter(source %in% c(main_ids, one_hop) | target %in% c(main_ids, one_hop))\n        nodes_sub &lt;- nodes %&gt;% filter(id %in% unique(c(edges_sub$source, edges_sub$target)))\n      }\n      \n      vis_nodes &lt;- data.frame(id = nodes_sub$id, label = nodes_sub$name,\n                              value = 10, group = nodes_sub$genre)\n      vis_edges &lt;- data.frame(from = edges_sub$source, to = edges_sub$target, arrows = \"to\")\n      \n      visNetwork(vis_nodes, vis_edges) %&gt;%\n        visOptions(highlightNearest = list(enabled = TRUE, degree = 1),\n                   nodesIdSelection = TRUE)\n    })\n    \n    # Sankey diagram: backflow influence from other genres to Oceanus Folk\n    output$genreSankey &lt;- renderSankeyNetwork({\n      data &lt;- filtered()$edges\n      nodes &lt;- filtered()$nodes\n      if (nrow(data) == 0 || nrow(nodes) == 0) return(NULL)\n      \n      main_genre &lt;- input$mainGenre\n      \n      # Filter for edges where only one side is Oceanus Folk\n      sankey_links &lt;- data %&gt;%\n        filter(\n          !is.na(source_genre) & !is.na(target_genre),\n          (target_genre != main_genre & source_genre == main_genre) |\n            (source_genre != main_genre & target_genre == main_genre)\n        ) %&gt;%\n        mutate(\n          FromGenre = ifelse(target_genre == main_genre, source_genre, target_genre),\n          ToGenre = main_genre\n        ) %&gt;%\n        group_by(FromGenre, ToGenre) %&gt;%\n        summarize(Value = n(), .groups = 'drop')\n    \n      \n      if (nrow(sankey_links) == 0) return(NULL)\n      \n      # Create nodes and links\n      sankey_nodes &lt;- data.frame(name = unique(c(sankey_links$FromGenre, sankey_links$ToGenre)))\n      sankey_links &lt;- sankey_links %&gt;%\n        mutate(\n          source = match(FromGenre, sankey_nodes$name) - 1,\n          target = match(ToGenre, sankey_nodes$name) - 1\n        )\n      \n      sankeyNetwork(\n        Links = sankey_links,\n        Nodes = sankey_nodes,\n        Source = \"source\",\n        Target = \"target\",\n        Value = \"Value\",\n        NodeID = \"name\",\n        fontSize = 12,\n        nodeWidth = 30\n      )\n      \n    })\n    \n    # Detail panel: show node details upon selection\n    output$detailPanel &lt;- renderUI({\n      # Assume visNetwork selection triggers input$genreNetwork_selected\n      sel_id &lt;- input$genreNetwork_selected\n      if (is.null(sel_id)) {\n        return(tags$p(\"Click a node in the network or Sankey diagram to view details.\"))\n      }\n      # Look up selected node information\n      node_row &lt;- nodes_df %&gt;% filter(id == sel_id)\n      if (nrow(node_row) == 0) return(NULL)\n      # Sample field extraction (adjust to your schema)\n      name    &lt;- node_row$name\n      works   &lt;- ifelse(!is.null(node_row$representative_works), node_row$representative_works, \"N/A\")\n      activeY &lt;- ifelse(!is.null(node_row$release_date), node_row$release_date, \"Unknown\")\n      # Check whether there is collaboration or similarity with Sailor Shift\n      sshift_id &lt;- nodes_df$id[nodes_df$name == \"Sailor Shift\"]\n      related &lt;- any(edges_df$Edge.Type %in% c(\"MemberOf\", \"InStyleOf\", \"LyricistOf\", \"LyricalReferenceTo\") &\n                       ((edges_df$source == sel_id & edges_df$target == sshift_id) |\n                          (edges_df$source == sshift_id & edges_df$target == sel_id)))\n      tagList(\n        h4(paste0(\"Name: \", name)),\n        p(paste0(\"Representative Works: \", works)),\n        p(paste0(\"Active Year: \", activeY)),\n        p(paste0(\"Collaboration / Style Similarity with Sailor Shift: \", ifelse(related, \"Yes\", \"No\")))\n      )\n    })\n\n\n\n\n\nPurpose\nCompare emerging artists based on graph features and scoring metrics to identify rising talent in a specific genre.\nKey Features 🎯 Filter by Genre Users can focus on a specific musical style to narrow the artist pool.\n\n🎛 Customizable Score Weights Sliders allow users to adjust the importance of PageRank, Degree Centrality, Style Similarity, and Notable Works — helping tailor the talent score to different discovery goals.\n📊 Radar Comparison Chart Visually compare up to 5 artists across the 4 scoring dimensions using an interactive radar plot.\n📋 Scoreboard Table A sortable, downloadable table summarizing talent scores and ranking details.\n📥 Export Results Allows users to download the scoring results as a CSV for further analysis or reporting.\n\n📸 Talent Radar Panel\nTalent Radar – Score Explorer\nThe Score Explorer tab in the Talent Radar module is organized into two main sections:\n\nArtist Selection Controls (Left Pane)\n\nFilter by Genre\nChoose one or more music genres to limit which artists are considered.\nSelect Artists to Compare\nA searchable, multi-select dropdown that lists all artists active in the selected genre(s); up to five can be chosen for direct comparison.\n\nCustomize Score Weights (Left Pane)\n\nPageRank\n&gt; Indicates an artist’s global influence within the full network.\nDegree Centrality\n&gt; Counts the number of direct connections an artist has (collaborations, samples, covers, etc.).\nStyle Similarity\n&gt; Reflects how frequently an artist contributes to works in the selected genre(s).\nNotable Works Count\n&gt; The normalized count of an artist’s works flagged as “notable” in the dataset.\n\nVisualization Output (Right Pane)\n\nRadar Comparison (default)\nPlots each selected artist on a four-axis radar chart (PageRank, Degree, StyleSim, NotableCount), scaled 0–1, making it easy to see which artist leads on which metric.\nScoreboard\nA sortable, searchable table of the raw normalized scores and overall weighted score for each selected artist.\n\n\nThis layout enables interactive “what-if” analysis: dragging the weight sliders immediately updates the radar and table, so stakeholders can experiment with different business priorities (e.g., favoring global influence vs. genre specialization) to surface the most promising emerging talent.\n\nTalent Radar – Scoreboard\nThe Scoreboard tab complements the Radar Comparison by showing the underlying normalized metrics and overall weighted scores in a familiar table format. Key features:\n\nEntries Selector\nControl the number of rows shown per page (10, 25, 50, 100) for quick paging through results.\nSearch Box\nFilter artists in real time by name or any score field.\nSortable Columns\nClick any column header (PageRank, Degree, StyleSim, NotableCountNorm, Score) to sort ascending/descending.\nDownload CSV\nExport the complete weighted scores dataset for offline analysis or reporting.\n\n\n\n\nUI Design + Server Planning Code\n\n\ntabItem(\n  tabName = \"talent\",\n  fluidRow(\n    column(4,\n      pickerInput(\"talent_genre\", \"Filter by Genre\", ...),\n      uiOutput(\"select_compare_artists\"),\n      sliderInput(\"weight_pagerank\", \"PageRank\", 0, 1, 0.3),\n      sliderInput(\"weight_degree\", \"Degree Centrality\", 0, 1, 0.2),\n      sliderInput(\"weight_similarity\", \"Style Similarity\", 0, 1, 0.3),\n      sliderInput(\"weight_notable_count\", \"Notable Works Count\", 0, 1, 0.2),\n      downloadButton(\"download_weighted_scores\", \"Download CSV\")\n    ),\n    column(8,\n      tabsetPanel(\n        tabPanel(\"Radar Comparison\", plotlyOutput(\"talent_radar_plot\")),\n        tabPanel(\"Scoreboard\", DTOutput(\"talent_score_table\"))\n      )\n    )\n  )\n)\n\n\n\n\n\nPurpose Enable high-level insights export and macro filtering across all trends.\n\nKey Features Select multiple genres\nChoose analysis layers (e.g., cumulative, normalized)\nExport raw data as CSV\n\n📸 Screenshot of Trend Dashboard Panel\n\n\nUI Design + Server Planning Code\n\ntabItem(\n  tabName = \"trend\",\n  fluidRow(\n    column(4,\n      pickerInput(\"trend_genre\", \"Select Genre(s)\", ...),\n      checkboxGroupInput(\"trend_layers\", \"Show Layers\", choices = ...),\n      downloadButton(\"download_trend_data\", \"Export Trend Data\")\n    ),\n    column(8, plotlyOutput(\"trend_area_plot\"))\n  )\n)"
  },
  {
    "objectID": "Storyboard.html#setup-data-preparation",
    "href": "Storyboard.html#setup-data-preparation",
    "title": "EchoScope™ Prototype Storyboard",
    "section": "",
    "text": "Before diving into the individual UI panels, here’s a quick summary of the R packages we load and the core data-preprocessing steps used throughout EchoScope™. Click Show to expand.\n\n\n\nShow libraries & data-prep code\n\n# ——— R Packages ———\n\n# ——— Shiny & UI ———\nlibrary(shiny)\nlibrary(shinydashboard)\nlibrary(shinyWidgets)\n\n# ——— Data wrangling ———\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(jsonlite)\nlibrary(lubridate)\nlibrary(scales)\n\n# ——— Tables & plotting ———\nlibrary(DT)\nlibrary(ggplot2)\nlibrary(plotly)\n\n# ——— Network analysis ———\nlibrary(visNetwork)\nlibrary(tidygraph)\nlibrary(igraph)\n\n# ——— Influence Graph Data Prep ———\n\n# 1) Load graph JSON\nkg        &lt;- fromJSON(\"data/MC1_graph.json\")\nnodes_tbl &lt;- as_tibble(kg$nodes)\nedges_tbl &lt;- as_tibble(kg$links)\n\n# 2) Build index map\nid_map &lt;- tibble(\n  id    = nodes_tbl$id,\n  index = seq_len(nrow(nodes_tbl))\n)\n\n# 3) Translate source/target → from/to\nedges_tbl_graph &lt;- edges_tbl %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;% rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;% rename(to   = index) %&gt;%\n  filter(!is.na(from), !is.na(to))\n\n# 4) Create tidygraph object\ng_tbl &lt;- tbl_graph(\n  nodes    = nodes_tbl %&gt;% rename(node_name = name) %&gt;% mutate(index = row_number()),\n  edges    = edges_tbl_graph,\n  directed = TRUE\n)\n\n# 5) Subnetwork extraction helper\nextract_subnetwork &lt;- function(graph, node_name,\n                               distance = NULL,\n                               direction = c(\"all\",\"in\",\"out\"),\n                               edge_types = NULL,\n                               node_types = NULL) {\n  direction &lt;- match.arg(direction)\n  v_idx     &lt;- which(V(graph)$name == node_name)\n  vids      &lt;- ego(graph, v_idx, order = distance %||% length(graph),\n                   mode = direction)[[1]]\n  sg        &lt;- induced_subgraph(graph, vids)\n  nd        &lt;- as_data_frame(sg, what = \"vertices\")\n  ed        &lt;- as_data_frame(sg, what = \"edges\")\n  if (!is.null(edge_types)) ed &lt;- ed[ed$`Edge Type` %in% edge_types, ]\n  if (!is.null(node_types)) nd &lt;- nd[nd$`Node Type` %in% node_types, ]\n  tidygraph::tbl_graph(nodes = nd, edges = ed, directed = is_directed(graph))\n}\n\n# 6) Talent scoring function\nprepare_talent_score_from_graph &lt;- function(g_tbl) {\n  nodes &lt;- as_tibble(g_tbl, active = \"nodes\")\n  edges &lt;- as_tibble(g_tbl, active = \"edges\")\n\n  # Identify notable works\n  notable_work_ids &lt;- nodes %&gt;%\n    filter(`Node Type` %in% c(\"Song\",\"Album\"), notable == TRUE) %&gt;%\n    pull(index)\n\n  # Identify contributing persons\n  person_edge_types &lt;- c(\"PerformerOf\",\"ComposerOf\",\"ProducerOf\",\"LyricistOf\")\n  contributing_persons &lt;- edges %&gt;%\n    filter(to %in% notable_work_ids, `Edge Type` %in% person_edge_types) %&gt;%\n    pull(from) %&gt;% unique()\n\n  # Prepare person dataframe with recency & label\n  person_df &lt;- nodes %&gt;%\n    filter(`Node Type` == \"Person\") %&gt;%\n    select(index, label = node_name, notoriety_date, genre) %&gt;%\n    mutate(\n      notoriety_year   = as.numeric(substr(notoriety_date,1,4)),\n      notoriety_recency = pmax(0, 1 - (2025 - notoriety_year) / 20),\n      notable_label     = as.integer(index %in% contributing_persons)\n    )\n\n  # Add graph features\n  graph_feat &lt;- g_tbl %&gt;%\n    activate(nodes) %&gt;%\n    mutate(degree = centrality_degree(), pagerank = centrality_pagerank())\n  feat &lt;- as_tibble(graph_feat, active = \"nodes\") %&gt;%\n    filter(`Node Type` == \"Person\") %&gt;%\n    select(index, degree, pagerank)\n\n  # Merge features\n  features &lt;- person_df %&gt;%\n    left_join(feat, by = \"index\") %&gt;%\n    mutate(across(c(degree,pagerank,notoriety_recency), ~replace_na(.,0)))\n\n  # Train logistic regression\n  if (nrow(features) &lt; 10 || length(unique(features$notable_label)) &lt; 2)\n    stop(\"Insufficient training data or no positive/negative samples.\")\n  model &lt;- glm(notable_label ~ degree + pagerank + notoriety_recency,\n               data = features, family = binomial)\n\n  # Predict and return scored data frame\n  features$predicted_prob &lt;- predict(model, newdata = features, type = \"response\")\n  features %&gt;%\n    arrange(desc(predicted_prob)) %&gt;%\n    mutate(id = index) %&gt;%\n    select(id, label, genre, degree, pagerank,\n           notoriety_year, notoriety_recency,\n           predicted_prob, notable_label)\n}\n\n# Example: generate talent_score_df\ntalent_model_result &lt;- prepare_talent_score_from_graph(g_tbl)\ntalent_score_df      &lt;- talent_model_result"
  },
  {
    "objectID": "Storyboard.html#user-flow-overview",
    "href": "Storyboard.html#user-flow-overview",
    "title": "EchoScope™ Prototype Storyboard",
    "section": "",
    "text": "This section illustrates the main propose user interaction journey through the EchoScope™ platform.\n\nFlow Structure:\n1. Home – Introduction and orientation\n2. Influence Analysis – Explore influence networks\n3. Genre Diffusion – Track genre trends over time\n4. Talent Radar – Compare and discover emerging talent\n5. Trend Dashboard – Export macro-level insights\n📸 EchoScope™ Dashboard Sidebar Navigation Screenshot"
  },
  {
    "objectID": "Storyboard.html#home-panel",
    "href": "Storyboard.html#home-panel",
    "title": "EchoScope™ Prototype Storyboard",
    "section": "",
    "text": "Welcome users and introduce the EchoScope™ platform.\n\n\n\nHomepage with a welcome message and orientation notes.\n📸 Screenshot of Home Page\n\n\n\nShow code\n\ntabItem(\n  tabName = \"home\",\n  fluidRow(\n    box(\n      width = 12, status = \"primary\", solidHeader = FALSE,\n      HTML('&lt;h1&gt;Welcome!&lt;/h1&gt;&lt;p&gt;EchoScope™ is a web-based visual analytics prototype...&lt;/p&gt;')\n    )\n  )\n)"
  },
  {
    "objectID": "Storyboard.html#influence-analysis-panel",
    "href": "Storyboard.html#influence-analysis-panel",
    "title": "EchoScope™ Prototype Storyboard",
    "section": "",
    "text": "Section Purpose: Understanding Sailor Shift’s Artistic Influence Network\nThis section presents a structured exploration of Sailor Shift’s artistic connections, using network analysis to examine three key perspectives:\n\nWho has Sailor Shift been influenced by?\n\nExplore direct and indirect artistic influences on Sailor Shift over time.\nWho has she collaborated with and influenced?\n\nIdentify collaborators and assess how her work has directly or indirectly shaped others.\nHer Influence on the Oceanus Folk Community\n\nFocus on how her influence has spread within the Oceanus Folk genre, including both direct and second-level indirect pathways.\n\n📸 Screenshot of Influence Graph Panel\n\n1：We are going to use the tabset panel to focus on three key perspectives of influence analysis；\n2 : Each section provides an overview introduction to the influence network from a specific perspective, helping users better understand the background and objectives of this dashboard.\n\n\nThe main dashboard will show into four parts Interactive Filter Panel, Plot, Legend Panel, Interactive Data Table :\n\nInteractive Filter Panel :\n\nObjective : To empower users to efficiently explore and narrow down the influence network of Sailor Shift by providing intuitive and responsive filtering options.\nPlanned Filter Components & Intended Functionality\n\n\n\n\n\n\n\n\nFilter\nUser Interaction\nPlanned Purpose\n\n\n\n\nSelect Node Type\nMulti-select (e.g., Album, Person, Song, RecordLabel, etc.)\nFilters the network to show only selected entity types as nodes.\n\n\nSearch Node Name\nDropdown or typeahead search (e.g., “Brooke Olson”)\nFocuses the network graph on the selected node, zooming in automatically.\n\n\nSelect Edge Type\nMulti-select (e.g., ComposerOf, Interpolates, etc.)\nFilters edges by relationship type to limit visual noise and highlight key links.\n\n\nIs Notable?\nRadio buttons (All / TRUE / FALSE)\nFilters nodes by whether they are tagged as “notable” to emphasize known artists.\n\n\nSelect Genre(s)\nMulti-select (e.g., Alternative Rock, Avant-Garde Folk, etc.)\nEnables genre-based filtering to tailor the view to specific music categories.\n\n\nRelease Year Range\nRange slider (1983–2038) + “Select All Years” button\nRestricts nodes by their associated release year, helping with temporal filtering.\n\n\nSelect Network Depth (from Sailor Shift)\nRange slider (1–3) + “Select All network” button\nControls how many layers of influence (direct and indirect) are displayed.\n\n\n\nInteraction Design Considerations\n\nResponsiveness: Each filter is reactive and updates the network graph in real time.\nPerformance Notices: Informational messages are placed beneath heavier operations (e.g., select all years/network depth) to prepare the user for slight delays.\nEnhanced UX: All dropdowns use searchable pickerInputs with “actions-box” for select/deselect all, streamlining multi-choice workflows.\n\n2.Planned Visualization Panel: Influence Plot & Summary Statistics and the related legends\nObjective\nTo dynamically visualize Sailor Shift’s influence network and provide quantitative summaries that respond in real-time to user-selected filters.And Influence plot, we plan to use the network plot to see the influence and for the Statistics, we will use the bar chart.\nNetwork Plot & Summary plan\n\n\n\n\n\n\n\n\nTab\nContent Type\nPlanned Interaction\n\n\nInfluence Network\nPlan to usevisNetwork graph\nDisplays a dynamic node-link network showing direct and indirect influence.\n\n\n\n\nHover reveals details; click highlights sub-network.\n\n\n\n\nResponds in real time to filters in the left panel (node type, genre, years, etc.).\n\n\nSummary Statistics\nPlan to use plotly interactive bar chart\nShows count of edges by relationship type (e.g., ComposerOf, PerformerOf, etc.).\n\n\n\n\nAggregated metrics update live as filters change.\n\n\n\nPropose outcome of the plots:\nFor the legends, we will also add some interactions into the summary bar chart to find more information for the audience and in order to make more clearly to understand the network, the legends will also show the node types and the edge types for references.\n3.Planned Table Panel: Influence Relationship Details\nObjective\nTo provide a tabular view of the filtered influence relationships, allowing users to explore details at a granular level, complementing the network graph.\nDesign & Features\nFunctionality plan:\n\nPaginated view with adjustable row count (5, 10, 25, 50, 100)\nSearch bar for keyword-based filtering (e.g., node name, genre)\nSortable columns for customized sorting (e.g., by release year or relationship type)\n\nDynamic Interaction\n\nTable will updates in real time based on all applied filters (e.g., node type, genre, year range).\nSupports detailed exploration and verification of insights observed in the visual graph and summary statistics.\nPlan to add downloadable CSV export or row click-to-expand options in the future.\n\nHere are the propose skeleton of the first part of the network influence UI design.\n\n\nUI Design + Server Planning Code\n\ntabItem(\n  tabName = \"influenced\"/\"Impact & Collaborated\"/\"Community influence\",\n  fluidRow(\n    column(4, wellPanel(\n      #Filter Design\n      pickerInput(\"node_type\", \"Select Node Type\", choices = ...),\n      pickerInput(\"edge_type\", \"Select Edge Type\", ...),\n      helpText(tagList(),...),\n      radioButtons(inputId = \"notable_filter\",...),\n      pickerInput(inputId = \"genre_filter\",label = \"Select Genre(s)\",...),\n      sliderInput(\"release_range\", \"Release Year Range\", ...),\n      actionButton(\"release_range_btn\", \"Select All Years\"),\n      sliderInput(\"network_depth\", \"Network Depth\", ...)\n    )),\n    column(8, visNetworkOutput(\"directGraph\", height = \"700px\",...))\n    column(DTOutput(\"directTable\", ...)\n    \n   )\n  )\n)\n\nserver &lt;- function(input, output, session) {\n  \n  #1 Dynamic Filtering of Edges and Nodes\n  \n  - filtered_edges()         # Filter edges based on network depth and edge type\n  - filtered_nodes()         # Filter nodes based on valid IDs and input criteria\n  - observe()                # Dynamically update node_name picker choices\n  \n  #2 Network Graph Rendering and Interaction\n  \n  - output$directGraph       # Render visNetwork main graph\n  - observeEvent(input$node_name)       # Focus and highlight on selected node\n  - observeEvent(input$notable_filter)  # Highlight nodes based on \"Notable\" filter\n  \n  #3 Quick Interaction Buttons\n  \n  - observeEvent(input$release_range_btn)     # Reset release year slider to full range\n  - observeEvent(input$network_depth_btn)     # Set network depth to maximum (e.g., 3)\n  \n  #4 Data Table Output Section (DT::datatable)\n  \n  - output$directTable       # Display filtered edge data with node names, types, genres, and dates\n  \n  #5 Summary Statistics Visualization Output\n  \n  - output$groupEdgeBarPlot  # Render grouped bar chart (Node Type × Edge Type) using ggplotly\n  - output$barInfo           # Display tooltip text on bar click (plotly_click event)\n\n}"
  },
  {
    "objectID": "Storyboard.html#genre-diffusion-panel",
    "href": "Storyboard.html#genre-diffusion-panel",
    "title": "EchoScope™ Prototype Storyboard",
    "section": "",
    "text": "🎯 Module Purpose\nThis module explores how the genre Oceanus Folk has influenced the creation and spread of songs and albums over time. Using a dynamic network and Sankey diagram, we visualize genre diffusion pathways, including direct and indirect influence, along with their temporal evolution.\n\n📝 Use case: A music analyst or cultural researcher can trace how Oceanus Folk catalyzed the emergence of related genres, artists, and works across decades.\n\n\n🧭 Interface Overview\n📸 Screenshot of Genre Diffusion Panel\n\n① Left Panel: Control Inputs\nThis panel allows users to refine the visualization by setting key filters:\n\nMain Genre Selector: Defaults to Oceanus Folk. Users can switch to explore other genres if applicable.\nYear Range Slider: Restricts the dataset by release year to focus on specific time windows.\nNode Type Selector: Filters the visualization to show only Song or Album nodes (ignores irrelevant types like Person).\nHop Depth (1-hop / 2-hop): Determines the depth of network exploration from the main genre (direct vs indirect influence).\n\nThese inputs dynamically control the center visualizations to support targeted analysis.\n② Center Panel Top: Timeline Trend Panel\nThis stacked area chart visualizes how different genres have been influenced by Oceanus Folk over time.\n\nX-axis: Year of release\n\nY-axis: Number of works influenced\n\nFill Color: Receiving genre\n\nInsights Provided:\n\nObserve stylistic waves: Is influence steady, or does it spike in certain periods?\nDetect genre surges: Which genres became more prominent over time due to Oceanus Folk?\nStudy response lag: How long after Oceanus Folk’s rise did other genres begin to echo it?\n\nThe year slider narrows the temporal scope for closer inspection.\n③ Center Panel Middle: Genre Influence Network\nThis network graph visualizes works and genres influenced by Oceanus Folk.\n\nNodes: Songs or albums with genre tags\n\nEdges: Influence links (e.g., stylistic references, covers)\n\nGrouping: Nodes colored by genre\n\nHop Depth: 1-hop shows immediate connections; 2-hop expands to indirect pathways\n\nInsights Provided:\n\nSee structural spread: Starburst (centralized) vs Chain (progressive) diffusion\nDiscover genre bridges: Nodes that link distant styles\nAnalyze neighborhood scope: How far does Oceanus Folk’s influence travel?\n\nClicking a node reveals more info in the detail panel.\n④ Right Panel: Detail Panel\nThis section updates when a node is selected in the network or Sankey diagram.\nDetails shown: - Name of the node (song or album)\n- Representative Works (if available)\n- Active Year (release year)\n- Sailor Shift Connection: Whether the node has a collaboration or stylistic link with Sailor Shift\nPurpose:\n\nEnable deep-dives into specific works\nConnect micro-level detail with macro-level diffusion patterns\nSupport contextual storytelling around influential pieces or collaborators\n\n⑤ Center Panel Bottom: Genre Influence Backflow (Sankey Diagram)\nThis Sankey diagram shows reverse influence — how other genres influenced Oceanus Folk.\n\nSource: External genres (e.g., Jazz, Psychedelic)\n\nTarget: Oceanus Folk\n\nLink Width: Frequency or weight of connections\n\nInsights Provided:\n\nUncover external roots: What genres shaped Oceanus Folk’s evolution?\nSpot dominant contributors: Are there a few strong influencers or many subtle ones?\nExplore bidirectional influence: Music genres are not static — Oceanus Folk both influences and is influenced.\n\nThis module highlights how cultural exchange reshapes a genre over time.\n⑤ Right Panel: Detail Panel\nThis section updates when a node is selected in the network or Sankey diagram.\nDetails shown: - Name of the node (song or album)\n- Representative Works (if available)\n- Active Year (release year)\n- Sailor Shift Connection: Whether the node has a collaboration or stylistic link with Sailor Shift\nPurpose:\n\nEnable deep-dives into specific works\nConnect micro-level detail with macro-level diffusion patterns\nSupport contextual storytelling around influential pieces or collaborators\n\n\n\nUI Design + Server Planning Code\n\n    tabItem(tabName = \"genre\",\n            fluidRow(\n              \n              column(width = 3,\n                     box(title = \"Control Panel\", status = \"info\", solidHeader = TRUE, width = 13,\n                         selectInput(\"mainGenre\", \"Main Genre\",\n                                     choices = sort(unique(na.omit(all_nodes$genre))),\n                                     selected = \"Oceanus Folk\"\n                         ),\n                         sliderInput(\"yearRange\", \"Year Range:\",\n                                     min = 1983, max = 2038, value = c(1990, 2025), sep = \"\"\n                         ),\n                         selectInput(\"nodeType\", \"Node Type:\",\n                                     choices = c(\"Song (Track)\" = \"Song\", \"Album\" = \"Album\"),\n                                     selected = \"Song\"\n                         ),\n                         radioButtons(\"hopDepth\", \"Influence Path Depth:\",\n                                      choices = c(\"1-hop\" = 1, \"2-hop\" = 2), selected = 1\n                         )\n                     )\n              ),\n              \n              column(width = 9,\n                     fluidRow(\n                       column(width = 8,\n                              box(title = \"Timeline Trend\", status = \"primary\", solidHeader = TRUE, width = 14,\n                                  plotlyOutput(\"trendPlot\", height = \"200px\")\n                              ),\n                              box(title = \"Genre Influence Network\", status = \"primary\", solidHeader = TRUE, width = 14,\n                                  visNetworkOutput(\"genreNetwork\", height = \"250px\")\n                              ),\n                              box(title = \"Genre Influence Backflow\", status = \"primary\", solidHeader = TRUE, width = 14,\n                                  sankeyNetworkOutput(\"genreSankey\", height = \"250px\")\n                              )\n                       ),\n                       column(width = 4,\n                              box(title = \"Detail Panel\", status = \"primary\", solidHeader = TRUE, width = 12,\n                                  uiOutput(\"detailPanel\")\n                              )\n                       )\n                     )\n              )\n            )\n    )\n    \n#### Sever Part ######\ngraph_data &lt;- fromJSON(\"data/MC1_graph.json\")\n    nodes_df &lt;- as.data.frame(graph_data$nodes)\n    edges_df &lt;- as.data.frame(graph_data$links)\n    \n    all_nodes &lt;- nodes_df\n    \n    # Reactive filtering: filter nodes and edges based on user input\n    filtered &lt;- reactive({\n      \n      nodes &lt;- all_nodes \n      edges &lt;- edges_df\n      \n      # Only keep nodes that are Song or Album and have genre\n      nodes &lt;- nodes %&gt;%\n        filter(`Node Type` %in% c(\"Song\", \"Album\"), !is.na(genre))\n      \n      # Filter by year (assumes release_date is year string)\n      yr &lt;- input$yearRange\n      if (!is.null(yr)) {\n        nodes &lt;- nodes %&gt;%\n          filter(!is.na(release_date) & as.numeric(release_date) &gt;= yr[1] & \n                   as.numeric(release_date) &lt;= yr[2])\n      }\n      \n      # Filter by node type\n      if (!is.null(input$nodeType) && input$nodeType != \"\") {\n        nodes &lt;- nodes %&gt;% filter(`Node Type` == input$nodeType)\n      }\n      \n      # Join genre info\n      edges &lt;- edges %&gt;%\n        left_join(nodes %&gt;% select(id, genre), by = c(\"source\" = \"id\")) %&gt;%\n        rename(source_genre = genre) %&gt;%\n        left_join(nodes %&gt;% select(id, genre), by = c(\"target\" = \"id\")) %&gt;%\n        rename(target_genre = genre)\n      \n      list(nodes = nodes, edges = edges)\n    })\n    \n    observe({\n      updateSelectInput(session, \"mainGenre\",\n                        choices = sort(unique(na.omit(nodes_df$genre))),\n                        selected = \"Oceanus Folk\")\n    })\n    \n    # Timeline trend plot: count genre nodes influenced by Oceanus Folk per year\n    output$trendPlot &lt;- renderPlotly({\n      data &lt;- filtered()$nodes\n      if (nrow(data) == 0) return(NULL)\n      # Extract year and count number of nodes per genre per year\n      df &lt;- data %&gt;% \n        filter(!is.na(release_date)) %&gt;%\n        mutate(Year = as.numeric(release_date)) %&gt;%\n        group_by(Year, genre) %&gt;%\n        summarize(Count = n(), .groups = 'drop')\n      if (nrow(df) == 0) return(NULL)\n      # Plot stacked area chart\n      p &lt;- ggplot(df, aes(x = Year, y = Count, fill = genre)) +\n        geom_area(alpha = 0.6) +\n        labs(x = \"Year\", y = \"Affected Count\", fill = \"Genre\") +\n        theme_minimal()\n      ggplotly(p)\n    })\n    \n    # Genre influence network: centered on Oceanus Folk showing influence connections\n    output$genreNetwork &lt;- renderVisNetwork({\n      data &lt;- filtered()\n      nodes &lt;- data$nodes\n      edges &lt;- data$edges\n      if (nrow(nodes) == 0 || nrow(edges) == 0) return(NULL)\n      \n      main_genre &lt;- input$mainGenre\n      \n      # 用 all_nodes 获取主 genre 节点 ID\n      main_ids &lt;- all_nodes %&gt;% filter(genre == main_genre) %&gt;% pull(id)\n      if (length(main_ids) == 0) return(NULL)\n      \n      if (input$hopDepth == 1) {\n        edges_sub &lt;- edges %&gt;% filter(source %in% main_ids | target %in% main_ids)\n        nodes_sub &lt;- nodes %&gt;% filter(id %in% unique(c(edges_sub$source, edges_sub$target)))\n      } else {\n        one_hop &lt;- edges %&gt;% filter(source %in% main_ids | target %in% main_ids) %&gt;%\n          pull(source, target) %&gt;% unlist() %&gt;% unique()\n        edges_sub &lt;- edges %&gt;% filter(source %in% c(main_ids, one_hop) | target %in% c(main_ids, one_hop))\n        nodes_sub &lt;- nodes %&gt;% filter(id %in% unique(c(edges_sub$source, edges_sub$target)))\n      }\n      \n      vis_nodes &lt;- data.frame(id = nodes_sub$id, label = nodes_sub$name,\n                              value = 10, group = nodes_sub$genre)\n      vis_edges &lt;- data.frame(from = edges_sub$source, to = edges_sub$target, arrows = \"to\")\n      \n      visNetwork(vis_nodes, vis_edges) %&gt;%\n        visOptions(highlightNearest = list(enabled = TRUE, degree = 1),\n                   nodesIdSelection = TRUE)\n    })\n    \n    # Sankey diagram: backflow influence from other genres to Oceanus Folk\n    output$genreSankey &lt;- renderSankeyNetwork({\n      data &lt;- filtered()$edges\n      nodes &lt;- filtered()$nodes\n      if (nrow(data) == 0 || nrow(nodes) == 0) return(NULL)\n      \n      main_genre &lt;- input$mainGenre\n      \n      # Filter for edges where only one side is Oceanus Folk\n      sankey_links &lt;- data %&gt;%\n        filter(\n          !is.na(source_genre) & !is.na(target_genre),\n          (target_genre != main_genre & source_genre == main_genre) |\n            (source_genre != main_genre & target_genre == main_genre)\n        ) %&gt;%\n        mutate(\n          FromGenre = ifelse(target_genre == main_genre, source_genre, target_genre),\n          ToGenre = main_genre\n        ) %&gt;%\n        group_by(FromGenre, ToGenre) %&gt;%\n        summarize(Value = n(), .groups = 'drop')\n    \n      \n      if (nrow(sankey_links) == 0) return(NULL)\n      \n      # Create nodes and links\n      sankey_nodes &lt;- data.frame(name = unique(c(sankey_links$FromGenre, sankey_links$ToGenre)))\n      sankey_links &lt;- sankey_links %&gt;%\n        mutate(\n          source = match(FromGenre, sankey_nodes$name) - 1,\n          target = match(ToGenre, sankey_nodes$name) - 1\n        )\n      \n      sankeyNetwork(\n        Links = sankey_links,\n        Nodes = sankey_nodes,\n        Source = \"source\",\n        Target = \"target\",\n        Value = \"Value\",\n        NodeID = \"name\",\n        fontSize = 12,\n        nodeWidth = 30\n      )\n      \n    })\n    \n    # Detail panel: show node details upon selection\n    output$detailPanel &lt;- renderUI({\n      # Assume visNetwork selection triggers input$genreNetwork_selected\n      sel_id &lt;- input$genreNetwork_selected\n      if (is.null(sel_id)) {\n        return(tags$p(\"Click a node in the network or Sankey diagram to view details.\"))\n      }\n      # Look up selected node information\n      node_row &lt;- nodes_df %&gt;% filter(id == sel_id)\n      if (nrow(node_row) == 0) return(NULL)\n      # Sample field extraction (adjust to your schema)\n      name    &lt;- node_row$name\n      works   &lt;- ifelse(!is.null(node_row$representative_works), node_row$representative_works, \"N/A\")\n      activeY &lt;- ifelse(!is.null(node_row$release_date), node_row$release_date, \"Unknown\")\n      # Check whether there is collaboration or similarity with Sailor Shift\n      sshift_id &lt;- nodes_df$id[nodes_df$name == \"Sailor Shift\"]\n      related &lt;- any(edges_df$Edge.Type %in% c(\"MemberOf\", \"InStyleOf\", \"LyricistOf\", \"LyricalReferenceTo\") &\n                       ((edges_df$source == sel_id & edges_df$target == sshift_id) |\n                          (edges_df$source == sshift_id & edges_df$target == sel_id)))\n      tagList(\n        h4(paste0(\"Name: \", name)),\n        p(paste0(\"Representative Works: \", works)),\n        p(paste0(\"Active Year: \", activeY)),\n        p(paste0(\"Collaboration / Style Similarity with Sailor Shift: \", ifelse(related, \"Yes\", \"No\")))\n      )\n    })"
  },
  {
    "objectID": "Storyboard.html#talent-radar-panel",
    "href": "Storyboard.html#talent-radar-panel",
    "title": "EchoScope™ Prototype Storyboard",
    "section": "",
    "text": "Purpose\nCompare emerging artists based on graph features and scoring metrics to identify rising talent in a specific genre.\nKey Features 🎯 Filter by Genre Users can focus on a specific musical style to narrow the artist pool.\n\n🎛 Customizable Score Weights Sliders allow users to adjust the importance of PageRank, Degree Centrality, Style Similarity, and Notable Works — helping tailor the talent score to different discovery goals.\n📊 Radar Comparison Chart Visually compare up to 5 artists across the 4 scoring dimensions using an interactive radar plot.\n📋 Scoreboard Table A sortable, downloadable table summarizing talent scores and ranking details.\n📥 Export Results Allows users to download the scoring results as a CSV for further analysis or reporting.\n\n📸 Talent Radar Panel\nTalent Radar – Score Explorer\nThe Score Explorer tab in the Talent Radar module is organized into two main sections:\n\nArtist Selection Controls (Left Pane)\n\nFilter by Genre\nChoose one or more music genres to limit which artists are considered.\nSelect Artists to Compare\nA searchable, multi-select dropdown that lists all artists active in the selected genre(s); up to five can be chosen for direct comparison.\n\nCustomize Score Weights (Left Pane)\n\nPageRank\n&gt; Indicates an artist’s global influence within the full network.\nDegree Centrality\n&gt; Counts the number of direct connections an artist has (collaborations, samples, covers, etc.).\nStyle Similarity\n&gt; Reflects how frequently an artist contributes to works in the selected genre(s).\nNotable Works Count\n&gt; The normalized count of an artist’s works flagged as “notable” in the dataset.\n\nVisualization Output (Right Pane)\n\nRadar Comparison (default)\nPlots each selected artist on a four-axis radar chart (PageRank, Degree, StyleSim, NotableCount), scaled 0–1, making it easy to see which artist leads on which metric.\nScoreboard\nA sortable, searchable table of the raw normalized scores and overall weighted score for each selected artist.\n\n\nThis layout enables interactive “what-if” analysis: dragging the weight sliders immediately updates the radar and table, so stakeholders can experiment with different business priorities (e.g., favoring global influence vs. genre specialization) to surface the most promising emerging talent.\n\nTalent Radar – Scoreboard\nThe Scoreboard tab complements the Radar Comparison by showing the underlying normalized metrics and overall weighted scores in a familiar table format. Key features:\n\nEntries Selector\nControl the number of rows shown per page (10, 25, 50, 100) for quick paging through results.\nSearch Box\nFilter artists in real time by name or any score field.\nSortable Columns\nClick any column header (PageRank, Degree, StyleSim, NotableCountNorm, Score) to sort ascending/descending.\nDownload CSV\nExport the complete weighted scores dataset for offline analysis or reporting.\n\n\n\n\nUI Design + Server Planning Code\n\n\ntabItem(\n  tabName = \"talent\",\n  fluidRow(\n    column(4,\n      pickerInput(\"talent_genre\", \"Filter by Genre\", ...),\n      uiOutput(\"select_compare_artists\"),\n      sliderInput(\"weight_pagerank\", \"PageRank\", 0, 1, 0.3),\n      sliderInput(\"weight_degree\", \"Degree Centrality\", 0, 1, 0.2),\n      sliderInput(\"weight_similarity\", \"Style Similarity\", 0, 1, 0.3),\n      sliderInput(\"weight_notable_count\", \"Notable Works Count\", 0, 1, 0.2),\n      downloadButton(\"download_weighted_scores\", \"Download CSV\")\n    ),\n    column(8,\n      tabsetPanel(\n        tabPanel(\"Radar Comparison\", plotlyOutput(\"talent_radar_plot\")),\n        tabPanel(\"Scoreboard\", DTOutput(\"talent_score_table\"))\n      )\n    )\n  )\n)"
  },
  {
    "objectID": "Storyboard.html#trend-dashboard-panel",
    "href": "Storyboard.html#trend-dashboard-panel",
    "title": "EchoScope™ Prototype Storyboard",
    "section": "",
    "text": "Purpose Enable high-level insights export and macro filtering across all trends.\n\nKey Features Select multiple genres\nChoose analysis layers (e.g., cumulative, normalized)\nExport raw data as CSV\n\n📸 Screenshot of Trend Dashboard Panel\n\n\nUI Design + Server Planning Code\n\ntabItem(\n  tabName = \"trend\",\n  fluidRow(\n    column(4,\n      pickerInput(\"trend_genre\", \"Select Genre(s)\", ...),\n      checkboxGroupInput(\"trend_layers\", \"Show Layers\", choices = ...),\n      downloadButton(\"download_trend_data\", \"Export Trend Data\")\n    ),\n    column(8, plotlyOutput(\"trend_area_plot\"))\n  )\n)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\nCode\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "Data_Preparation.html",
    "href": "Data_Preparation.html",
    "title": "Data Preparation",
    "section": "",
    "text": "This document outlines the key data preparation steps applied to the MC1_graph.json dataset for the EchoScope™ project. The goal is to construct graph-based structures and enrich them with attributes suitable for influence analysis, visual exploration, and talent scoring."
  },
  {
    "objectID": "Data_Preparation.html#overview",
    "href": "Data_Preparation.html#overview",
    "title": "Data Preparation",
    "section": "",
    "text": "This document outlines the key data preparation steps applied to the MC1_graph.json dataset for the EchoScope™ project. The goal is to construct graph-based structures and enrich them with attributes suitable for influence analysis, visual exploration, and talent scoring."
  },
  {
    "objectID": "Data_Preparation.html#getting-started",
    "href": "Data_Preparation.html#getting-started",
    "title": "Data Preparation",
    "section": "Getting Started",
    "text": "Getting Started\nFor the purpose of this exercise, four R packages will be used. They are tidyverse, jsonlite, tidygraph and ggraph.\nIn the code chunk below, p_load() of pacman package is used to load the R packages into R environemnt.\n\n\nCode\npacman::p_load(tidyverse, jsonlite,\n               tidygraph, ggraph,ggplot2,SmartEDA,igraph,visNetwork,DiagrammeR,ggtext)"
  },
  {
    "objectID": "Data_Preparation.html#importing-kownledge-graph-data",
    "href": "Data_Preparation.html#importing-kownledge-graph-data",
    "title": "Data Preparation",
    "section": "Importing Kownledge Graph Data",
    "text": "Importing Kownledge Graph Data\nFor the purpose of this exercise, MC1_graph.json file will be used. Before getting started, you should have the data set in the data sub-folder.\nIn the code chunk below, fromJSON() of jsonlite package is used to import MC1_graph.json file into R and save the output object\n\n\nCode\nkg &lt;- fromJSON(\"data/MC1_graph.json\")\n\n\nWhat are the components of kg data?\n\n\nCode\nglimpse(kg)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n  ..$ node_default: Named list()\n  ..$ edge_default: Named list()\n $ nodes     :'data.frame': 17412 obs. of  10 variables:\n  ..$ Node Type     : chr [1:17412] \"Song\" \"Person\" \"Person\" \"Person\" ...\n  ..$ name          : chr [1:17412] \"Breaking These Chains\" \"Carlos Duffy\" \"Min Qin\" \"Xiuying Xie\" ...\n  ..$ single        : logi [1:17412] TRUE NA NA NA NA FALSE ...\n  ..$ release_date  : chr [1:17412] \"2017\" NA NA NA ...\n  ..$ genre         : chr [1:17412] \"Oceanus Folk\" NA NA NA ...\n  ..$ notable       : logi [1:17412] TRUE NA NA NA NA TRUE ...\n  ..$ id            : int [1:17412] 0 1 2 3 4 5 6 7 8 9 ...\n  ..$ written_date  : chr [1:17412] NA NA NA NA ...\n  ..$ stage_name    : chr [1:17412] NA NA NA NA ...\n  ..$ notoriety_date: chr [1:17412] NA NA NA NA ...\n $ links     :'data.frame': 37857 obs. of  4 variables:\n  ..$ Edge Type: chr [1:37857] \"InterpolatesFrom\" \"RecordedBy\" \"PerformerOf\" \"ComposerOf\" ...\n  ..$ source   : int [1:37857] 0 0 1 1 2 2 3 5 5 5 ...\n  ..$ target   : int [1:37857] 1841 4 0 16180 0 16180 0 5088 14332 11677 ...\n  ..$ key      : int [1:37857] 0 0 0 0 0 0 0 0 0 0 ...\n\n\nThe result shows a typical knowledge graph (KG) data structure, the detail explanation is as followed:\n1.The overall structure is a list of 5 elements:\n\n\n\n\n\n\n\nElement Name\nMeaning\n\n\n\n\ndirected: TRUE\nIndicates the graph is directed (i.e., relationships have direction, like “someone performed a song”)\n\n\nmultigraph: TRUE\nIndicates this is a multigraph, meaning multiple edges (relationships) can exist between the same pair of nodes (e.g., a person can be both “composer” and “performer”)\n\n\ngraph\nContains default attributes for nodes and edges (currently empty named lists)\n\n\nnodes\nA data.frame, each row represents a node (e.g., a person or a song)\n\n\nlinks\nA data.frame, each row represents an edge (i.e., a relationship between two nodes)\n\n\n\n2.nodes table (node metadata)\nThere are 17,412 nodes, with the following variables:\n\n\n\nColumn Name\nExample / Meaning\n\n\n\n\nNode Type\nNode type, such as \"Song\" or \"Person\"\n\n\nname\nName of the node (e.g., a person or song title)\n\n\nsingle\nWhether it is a single (TRUE / FALSE)\n\n\nrelease_date\nRelease date (e.g., \"2017\")\n\n\ngenre\nGenre (e.g., \"Oceanus Folk\")\n\n\nnotable\nWhether it’s notable (TRUE / FALSE)\n\n\nid\nUnique ID for the node\n\n\nwritten_date\nDate the song was written\n\n\nstage_name\nStage name (if any)\n\n\nnotoriety_date\nDate the artist became known (if any)\n\n\n\n3.links table (edge/relationship information)\nThere are 37,857 edges, with the following columns:\n\n\n\n\n\n\n\nColumn Name\nMeaning / Example\n\n\n\n\nEdge Type\nType of relationship (e.g., \"PerformerOf\", \"ComposerOf\", \"InterpolateFrom\")\n\n\nsource\nID of the source node\n\n\ntarget\nID of the target node\n\n\nkey\nDifferentiates multiple edges between the same nodes\n\n\n\nInspect structure\nBefore preparing the data, it is always a good practice to examine the structure of kg object.\nIn the code chunk below str() is used to reveal the structure of kg object.\n\n\nCode\nstr(kg, max.level = 1)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n $ nodes     :'data.frame': 17412 obs. of  10 variables:\n $ links     :'data.frame': 37857 obs. of  4 variables:"
  },
  {
    "objectID": "Data_Preparation.html#extracting-the-edges-and-nodes-tables",
    "href": "Data_Preparation.html#extracting-the-edges-and-nodes-tables",
    "title": "Data Preparation",
    "section": "Extracting the edges and nodes tables",
    "text": "Extracting the edges and nodes tables\nNext, as_tibble() of tibble package package is used to extract the nodes and links tibble data frames from kg object into two separate tibble data frames called nodes_tbl and edges_tbl respectively.\n\n\nCode\nnodes_tbl &lt;- as_tibble(kg$nodes)\nedges_tbl &lt;- as_tibble(kg$links) \n\n\n\nInitial EDA\nIt is time for us to apply appropriate EDA methods to examine the data.\nIn this code chunk below, ggplot2 functions are used the reveal the frequency distribution of Edge Type field of edges_tbl.\n\nEdgeNode\n\n\n\n\nEdge Type Distribution\n# Count edge types\nedge_types &lt;- edges_tbl %&gt;%\n  count(`Edge Type`) %&gt;%\n  arrange(desc(n))\n\n# Set palette and label alignment\nedge_palette &lt;- c(\"#CA5310\", \"#F5C518\", \"#E5989B\", \"#38B000\", \"#2D3142\", \"#06D6A0\",\n                  \"#83C5BE\", \"#F4A261\", \"#F6BD60\", \"#A9DEF9\", \"#CBAACB\", \"#9B5DE5\")\n\nedge_types &lt;- edge_types %&gt;% \n  mutate(\n    text_color = ifelse(n &gt; 2000, \"white\", \"black\"),\n    text_hjust = ifelse(n &gt; 2000, 1.1, -0.1)\n  )\n\n# Plot\nggplot(edge_types, aes(x = reorder(`Edge Type`, n), y = n, fill = `Edge Type`)) +\n  geom_col(width = 0.65, show.legend = FALSE) +\n  geom_text(aes(label = n, hjust = text_hjust, color = text_color),\n            size = 4.5, fontface = \"bold\") +\n  coord_flip(clip = \"off\") +\n  scale_fill_manual(values = edge_palette) +\n  scale_color_identity() +\n  labs(\n    title = \"&lt;b style='font-size:20pt;'&gt;Edge Type Distribution&lt;/b&gt;\",\n    subtitle = \"&lt;span style='color:#666666;'&gt;Types and frequency of relationships in the knowledge graph&lt;/span&gt;\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme_minimal(base_family = \"Helvetica Neue\") +\n  theme(\n    panel.grid = element_blank(),\n    axis.text.y = element_text(face = \"bold\", size = 13, color = \"#222222\"),\n    axis.text.x = element_blank(),\n    axis.ticks = element_blank(),\n    plot.title = element_markdown(size = 20, face = \"bold\", hjust = 0),\n    plot.subtitle = element_markdown(size = 13, hjust = 0),\n    plot.margin = margin(10, 60, 30, 10)\n  )\n\n\n\n\n\n\n\n\n\n“PerformerOf” is the most frequent edge type\nExplanation: The majority of edges connect a person to a song via a performance relationship.\nInsight: This indicates that the relationship between performers and songs is a core structure in the knowledge graph, showing that the graph places a strong emphasis on who performed what.\n“RecordedBy”, “ComposerOf”, and “ProducerOf” are also common\nExplanation: Besides performers, the graph also documents many creators of the music, including composers, producers, and recording personnel.\nInsight: This suggests the graph goes beyond surface-level links, capturing multiple roles across the music creation pipeline.\nEdge types like “DirectlySamples”, “CoverOf”, “MemberOf”, and “LyricalReferenceTo” are less frequent\nExplanation: These edges represent more complex or less common musical relationships, such as:\nDirectlySamples: relates to copyright and musical inspiration\nCoverOf: shows the propagation of classic works through cover versions\nMemberOf: describes group or band membership\nInsight: Although less common, these edge types may hold higher value in studying musical influence and cultural transmission.\n\n\n\n\nNode Type Distribution\n# Step 1: Count each node type from your nodes_tbl\nnode_types &lt;- nodes_tbl %&gt;%\n  count(`Node Type`) %&gt;%\n  arrange(desc(n))\n\n# Step 2: Set custom palette by node type (ensure all types are covered)\ngenre_palette &lt;- c(\n  \"Person\" = \"#A566FF\",        # lavender\n  \"Song\" = \"#2ECC71\",          # green\n  \"RecordLabel\" = \"#1C1C1E\",   # black\n  \"Album\" = \"#FA7268\",         # salmon\n  \"MusicalGroup\" = \"#34B1C4\"   # aqua\n)\n\n# Step 3: Add label color and alignment based on value size\nnode_types &lt;- node_types %&gt;%\n  mutate(\n    text_color = ifelse(n &gt; 1000, \"white\", \"black\"),\n    text_hjust = ifelse(n &gt; 1000, 1.1, -0.1)\n  )\n\n# Step 4: Plot\nggplot(node_types, aes(x = reorder(`Node Type`, n), y = n, fill = `Node Type`)) +\n  geom_col(width = 0.65, show.legend = FALSE) +\n  geom_text(aes(label = n, hjust = text_hjust, color = text_color),\n            size = 4.5, fontface = \"bold\") +\n  coord_flip(clip = \"off\") +\n  scale_fill_manual(values = genre_palette) +\n  scale_color_identity() +\n  labs(\n    title = \"&lt;b style='font-size:20pt;'&gt;Node Type Distribution&lt;/b&gt;\",\n    subtitle = \"&lt;span style='color:#666666;'&gt;Count of each node type in the knowledge graph&lt;/span&gt;\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme_minimal(base_family = \"Helvetica Neue\") +\n  theme(\n    panel.grid = element_blank(),\n    axis.text.y = element_text(face = \"bold\", size = 13, color = \"#222222\"),\n    axis.text.x = element_blank(),\n    axis.ticks = element_blank(),\n    plot.title = element_markdown(size = 20, face = \"bold\", hjust = 0),\n    plot.subtitle = element_markdown(size = 13, hjust = 0),\n    plot.margin = margin(10, 60, 30, 10)\n  )\n\n\n\n\n\n\n\n\n\nMost nodes are of type Person\nExplanation: Individuals (singers, composers, producers, etc.) form the majority of nodes.\nInsight: The knowledge graph is person-centric, emphasizing individual contributions in the music ecosystem.\nSong is the second most frequent node type\nExplanation: Songs are heavily represented, as expected in a music-related knowledge graph.\nInsight: This reflects the graph’s role in mapping who is connected to which songs, enabling analysis of performance, authorship, and influence.\nOther node types (e.g., RecordLabel, Album, MusicalGroup) are far fewer\nExplanation: Entities like music labels, albums, and groups are present but much less prominent.\nInsight: These nodes play a supporting role in contextualizing the people-song relationships, potentially useful for advanced analyses (e.g., influence of labels, collaborations within groups).\nMusicalGroup nodes are very rare\nInsight: Either the graph focuses more on individual artists rather than bands/groups, or group membership data may be under-represented."
  },
  {
    "objectID": "Data_Preparation.html#creating-knowledge-graph",
    "href": "Data_Preparation.html#creating-knowledge-graph",
    "title": "Data Preparation",
    "section": "Creating Knowledge Graph",
    "text": "Creating Knowledge Graph\n\nMapping from node id to row index\nBefore we can go ahead to build the tidygraph object, it is important for us to ensures each id from the node list is mapped to the correct row number. This requirement can be achive by using the code chunk below.\n\n\nCode\nid_map &lt;- tibble(id = nodes_tbl$id,  #Retrieve the ID column of each row node\n                 index = seq_len(\n                   nrow(nodes_tbl)))  #Generate a line number sequence from 1 to n\n\n\n\n\nMap source and target IDs to row indices\nNext, we will map the source and the target IDs to row indices by using the code chunk below.\n\n\nCode\nedges_tbl &lt;- edges_tbl %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;%  # source id → from index\n  rename(from = index) %&gt;% \n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;%  # target id → to index\n  rename(to = index)\n\n\n\n\n\n\n\n\nNote\n\n\n\nTo better understand the changes before and after the process, it is to take a screenshot of edges_tbl before and after this process and examine the differences.\n\n\nNow we can see the difference between before and after the edges_tbl.\n\n\nCode\ntable(edges_tbl$`Edge Type`)\n\n\n\n        ComposerOf            CoverOf    DirectlySamples      DistributedBy \n              3290               1429                619               3013 \n         InStyleOf   InterpolatesFrom LyricalReferenceTo         LyricistOf \n              2289               1574               1496               2985 \n          MemberOf        PerformerOf         ProducerOf         RecordedBy \n               568              13587               3209               3798 \n\n\n\n\nFilter out any unmatched (invalid) edges\nLastly, the code chunk below will be used to exclude the unmatch edges.\n\n\nCode\nedges_tbl &lt;- edges_tbl %&gt;%\n  filter(!is.na(from), !is.na(to))\n\n\n\n\nCreating tidygraph\nLastly, tbl_graph() is used to create tidygraph’s graph object by using the code chunk below.\n\n\nCode\ngraph &lt;- tbl_graph(nodes = nodes_tbl, \n                   edges = edges_tbl, \n                   directed = kg$directed)\n\n\n\n\nCode\ngraph\n\n\n# A tbl_graph: 17412 nodes and 37857 edges\n#\n# A directed multigraph with 16 components\n#\n# Node Data: 17,412 × 10 (active)\n   `Node Type` name         single release_date genre notable    id written_date\n   &lt;chr&gt;       &lt;chr&gt;        &lt;lgl&gt;  &lt;chr&gt;        &lt;chr&gt; &lt;lgl&gt;   &lt;int&gt; &lt;chr&gt;       \n 1 Song        Breaking Th… TRUE   2017         Ocea… TRUE        0 &lt;NA&gt;        \n 2 Person      Carlos Duffy NA     &lt;NA&gt;         &lt;NA&gt;  NA          1 &lt;NA&gt;        \n 3 Person      Min Qin      NA     &lt;NA&gt;         &lt;NA&gt;  NA          2 &lt;NA&gt;        \n 4 Person      Xiuying Xie  NA     &lt;NA&gt;         &lt;NA&gt;  NA          3 &lt;NA&gt;        \n 5 RecordLabel Nautical Mi… NA     &lt;NA&gt;         &lt;NA&gt;  NA          4 &lt;NA&gt;        \n 6 Song        Unshackled … FALSE  2026         Lo-F… TRUE        5 &lt;NA&gt;        \n 7 Person      Luke Payne   NA     &lt;NA&gt;         &lt;NA&gt;  NA          6 &lt;NA&gt;        \n 8 Person      Xiulan Zeng  NA     &lt;NA&gt;         &lt;NA&gt;  NA          7 &lt;NA&gt;        \n 9 Person      David Frank… NA     &lt;NA&gt;         &lt;NA&gt;  NA          8 &lt;NA&gt;        \n10 RecordLabel Colline-Cas… NA     &lt;NA&gt;         &lt;NA&gt;  NA          9 &lt;NA&gt;        \n# ℹ 17,402 more rows\n# ℹ 2 more variables: stage_name &lt;chr&gt;, notoriety_date &lt;chr&gt;\n#\n# Edge Data: 37,857 × 6\n   from    to `Edge Type`      source target   key\n  &lt;int&gt; &lt;int&gt; &lt;chr&gt;             &lt;int&gt;  &lt;int&gt; &lt;int&gt;\n1     1  1842 InterpolatesFrom      0   1841     0\n2     1     5 RecordedBy            0      4     0\n3     2     1 PerformerOf           1      0     0\n# ℹ 37,854 more rows\n\n\nwe might want to confirm the output object is indeed in tidygraph format by using the code chunk below.\n\n\nCode\nclass(graph)\n\n\n[1] \"tbl_graph\" \"igraph\""
  },
  {
    "objectID": "Data_Preparation.html#data-preparation-for-influence-analysis",
    "href": "Data_Preparation.html#data-preparation-for-influence-analysis",
    "title": "Data Preparation",
    "section": "Data Preparation for Influence Analysis",
    "text": "Data Preparation for Influence Analysis\nFirstly, I created an extract_subnetwork function to simplify the process of extracting network data. The methodology was referenced from a senior’s work. In this case, I will also add a direction parameter to allow for further filtering.\n\n\nExtract_subnetwork\nextract_subnetwork &lt;- function(graph, node_name, \n                               distance = NULL, \n                               direction = c(\"all\", \"in\", \"out\"),\n                               edge_types = NULL,\n                               node_types = NULL) {\n  direction &lt;- match.arg(direction)\n  node &lt;- which(V(graph)$name == node_name)\n  if (length(node) == 0) stop(\"Node name not found in graph.\")\n  distance &lt;- ifelse(is.null(distance), length(graph), distance)\n\n  mode &lt;- switch(direction,\n                 all = \"all\",\n                 `in` = \"in\",\n                 out = \"out\")\n\n  igraph_subgraph &lt;- induced_subgraph(graph, vids = ego(graph, node, order = distance, mode = mode)[[1]])\n\n  nodes_df &lt;- igraph::as_data_frame(igraph_subgraph, what = \"vertices\")\n  edges_df &lt;- igraph::as_data_frame(igraph_subgraph, what = \"edges\")\n\n  if (!is.null(edge_types)) {\n    edges_df &lt;- edges_df %&gt;% dplyr::filter(`Edge Type` %in% edge_types)\n  }\n\n  if (!is.null(node_types)) {\n    nodes_df &lt;- nodes_df %&gt;% dplyr::filter(`Node Type` %in% node_types)\n  }\n\n  used_node_ids &lt;- unique(c(edges_df$from, edges_df$to))\n  nodes_df &lt;- nodes_df %&gt;% dplyr::filter(name %in% used_node_ids)\n\n  tidygraph::tbl_graph(nodes = nodes_df, edges = edges_df, directed = igraph::is_directed(graph))\n}\n\n\nFrom the initial (though imperfect) visNetwork visualization, we first examined what she had produced, and then proceeded to explore further connections.\n\n\nFirst examined what she had produced\nsubgraph_in &lt;- extract_subnetwork(\n  graph, \n  node_name = \"Sailor Shift\", \n  distance = 5, \n  direction = \"out\"\n)\n\nsubgraph_igraph &lt;- as.igraph(subgraph_in)\n\nnodes_all &lt;- igraph::as_data_frame(subgraph_igraph, what = \"vertices\")\nedges_all &lt;- igraph::as_data_frame(subgraph_igraph, what = \"edges\")\n\nsailor_id &lt;- nodes_all$name[nodes_all$name == \"Sailor Shift\"]\nedges_1st &lt;- edges_all %&gt;% filter(from == \"Sailor Shift\")\n\nvalid_targets &lt;- edges_1st %&gt;%\n  left_join(nodes_all, by = c(\"to\" = \"name\")) %&gt;%\n  filter(`Node Type` %in% c(\"MusicalGroup\", \"Song\", \"Album\",\"RecordLabel\")) %&gt;%\n  pull(to)\n\nvalid_node_ids &lt;- unique(c(\"Sailor Shift\", valid_targets))\nedges_vn &lt;- edges_all %&gt;% \n  filter(from %in% valid_node_ids | to %in% valid_node_ids)\n\nused_nodes &lt;- unique(c(edges_vn$from, edges_vn$to))\nnodes_vn &lt;- nodes_all %&gt;%\n  filter(name %in% used_nodes) %&gt;%\n  mutate(id = name, label = name, group = `Node Type`)\n\nedges_vn &lt;- edges_vn %&gt;%\n  mutate(\n    label = `Edge Type`, \n    title = paste0(\"Edge Type: \", `Edge Type`)  \n  )\n\n\n\n\nCode\nvisNetwork(nodes_vn, edges_vn, height = \"800px\", width = \"100%\") %&gt;%\n  visEdges(\n    arrows = \"to\",\n    font = list(\n      size = 12,         \n      align = \"middle\", \n      color = \"black\"    \n    )\n  ) %&gt;%  \n  visOptions(\n    highlightNearest = list(enabled = TRUE, degree = 4, hover = TRUE),\n    nodesIdSelection = TRUE,\n    selectedBy = \"group\"\n  ) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 1234) %&gt;%\n  visInteraction(navigationButtons = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\nInitial insights\n\n\n\n1. Sailor Shift (or the green central node) has wide-reaching influence\n\nThe central green node acts as a hub, with dozens of outgoing connections.\nIt suggests that this artist or work has inspired or been referenced by a large number of songs across the network.\nThese edges may include stylistic influence (InStyleOf), lyrical references (LyricalReferenceTo), or direct sampling (DirectlySamples).\n\n2. Artists (red nodes) serve as key enablers of diffusion\n\nRed clusters represent creators who performed or composed songs.\nSome artists are connected to many songs (e.g., bottom-left cluster), indicating high creative productivity or influence.\nThese creators may serve as important bridges that bring influence from central nodes into new musical outputs.\n\n3. Song clusters reveal thematic or stylistic communities\n\nYellow nodes (songs) tend to cluster around individual artists or genres.\nThese local clusters might represent albums, collaborative projects, or genre-specific scenes (e.g., “Oceanus Folk”).\nThe existence of many tightly grouped songs suggests coherent genre communities.\n4. Long influence chains suggest intergenerational influence\nYou can trace multi-hop paths through edges like \"InterpolatesFrom\" and \"LyricalReferenceTo\".\nThis suggests a rich lineage of stylistic borrowing, where newer works are built upon a cascade of earlier inspirations.\n\n5. Edge Type variety shows diverse forms of musical relationships\n\nEdges include \"PerformerOf\", \"ComposerOf\", \"ProducerOf\", \"CoverOf\", etc.\nThe diversity of edge types shows that musical influence is not just stylistic, but also structural (e.g., who produced or performed the track).\n\n\n\n\n1.Who has she been most influenced by over time?\nFirst Layer Exploration\nWe started with all nodes directly connected from Sailor Shift, and added the type information of each corresponding from-node.\n\n\nCode\nedges_1st_full_named &lt;- edges_1st %&gt;%\n  left_join(nodes_all %&gt;% select(name, `Node Type`) %&gt;%\n              rename(from = name, `From Type` = `Node Type`), by = \"from\") %&gt;%\n  \n  left_join(nodes_all %&gt;% select(name, `Node Type`, release_date, genre, notable, notoriety_date) %&gt;%\n              rename(to = name, `To Type` = `Node Type`, `To Release` = release_date,\n                     `To Genre` = genre, `To Notable` = notable, `To Notoriety Date` = notoriety_date),\n            by = \"to\") %&gt;%\n  \n  select(from, `From Type`, to, `To Type`, `Edge Type`, `To Release`, `To Genre`, `To Notable`, `To Notoriety Date`)\n\n\n\n\nCode\nknitr::kable(edges_1st_full_named)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfrom\nFrom Type\nto\nTo Type\nEdge Type\nTo Release\nTo Genre\nTo Notable\nTo Notoriety Date\n\n\n\n\nSailor Shift\nPerson\nNeon Heartbeat\nAlbum\nLyricistOf\n2031\nSynthwave\nFALSE\nNA\n\n\nSailor Shift\nPerson\nBallads for the End of Time\nAlbum\nLyricistOf\n2033\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nMelancholy Circuitry\nAlbum\nLyricistOf\n2033\nAmericana\nTRUE\nNA\n\n\nSailor Shift\nPerson\nDrifting Between the Stars and the Sea\nAlbum\nLyricistOf\n2034\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nArtificial Sunsets\nAlbum\nLyricistOf\n2035\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nElectric Reverie\nAlbum\nLyricistOf\n2038\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nBallads for the Low Tide\nAlbum\nLyricistOf\n2037\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nThe Fiddle & The Fjord\nMusicalGroup\nInStyleOf\nNA\nNA\nNA\nNA\n\n\nSailor Shift\nPerson\nTides of Echos\nAlbum\nLyricistOf\n2029\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nHidden Depths\nAlbum\nLyricistOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nIvy Echos\nMusicalGroup\nDirectlySamples\nNA\nNA\nNA\nNA\n\n\nSailor Shift\nPerson\nIvy Echos\nMusicalGroup\nMemberOf\nNA\nNA\nNA\nNA\n\n\nSailor Shift\nPerson\nThe Kelp Forest Canticles\nAlbum\nLyricistOf\n2024\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nLuminescent Tides\nAlbum\nLyricistOf\n2025\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nShoreline Sonnets\nAlbum\nLyricistOf\n2026\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTidal Pop Waves\nAlbum\nLyricistOf\n2028\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTidal Pop Waves\nAlbum\nPerformerOf\n2028\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSalty Dreams\nAlbum\nLyricistOf\n2030\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSalty Dreams\nAlbum\nPerformerOf\n2030\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nThe Current & The Chord\nAlbum\nLyricistOf\n2032\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nThe Current & The Chord\nAlbum\nPerformerOf\n2032\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nCoral Beats\nAlbum\nLyricistOf\n2034\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nCoral Beats\nAlbum\nPerformerOf\n2034\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTides & Ballads\nAlbum\nLyricistOf\n2036\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTides & Ballads\nAlbum\nPerformerOf\n2036\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nOceanbound\nAlbum\nLyricistOf\n2038\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nOceanbound\nAlbum\nPerformerOf\n2038\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nEchoes of the Deep\nAlbum\nLyricistOf\n2040\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nEchoes of the Deep\nAlbum\nPerformerOf\n2040\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nHigh Tide Heartbeat\nSong\nPerformerOf\n2028\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nElectric Eel Love\nSong\nPerformerOf\n2028\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSun-Drenched Daydream\nSong\nPerformerOf\n2028\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nChord of the Deep\nSong\nPerformerOf\n2028\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nHeart of the Habitat\nSong\nPerformerOf\n2030\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nReef Rhythm\nSong\nPerformerOf\n2030\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nDriftwood Lullaby\nSong\nPerformerOf\n2030\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nSaltwater Hymn\nSong\nPerformerOf\n2032\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nMoon Over the Tide\nSong\nPerformerOf\n2034\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nInto the Current\nSong\nPerformerOf\n2034\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nBarnacle Heart\nSong\nPerformerOf\n2034\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nFog & Fiddle\nSong\nPerformerOf\n2036\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nThe Fisherman’s Prayer\nSong\nPerformerOf\n2036\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nStormsong\nSong\nPerformerOf\n2038\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSalt in My Veins\nSong\nPerformerOf\n2040\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nThe Last Mariner\nSong\nPerformerOf\n2040\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nThe Saltwater Weavers\nMusicalGroup\nInStyleOf\nNA\nNA\nNA\nNA\n\n\nSailor Shift\nPerson\nDrowned Harbor\nMusicalGroup\nLyricalReferenceTo\nNA\nNA\nNA\nNA\n\n\nSailor Shift\nPerson\nTidesworn Ballads\nAlbum\nPerformerOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTidesworn Ballads\nAlbum\nLyricistOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSubmerged Sonatas\nAlbum\nPerformerOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSubmerged Sonatas\nAlbum\nLyricistOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSeashell Serenade\nSong\nPerformerOf\n2030\nOceanus Folk\nTRUE\n2030\n\n\n\n\n\nBelow is all the information on the First layer, and then remove if there is no other influenced layer\n\nDirectlySamples #InStyleOf #LyricalReferenceTo #LyricistOfMemberOf #PerformerOf\n\n\n\n\nCode\nselected_types &lt;- c(\"DirectlySamples\")\n\nedges_selected &lt;- edges_1st_full_named %&gt;%\n  filter(`Edge Type` %in% selected_types)\n\nknitr::kable(edges_selected)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfrom\nFrom Type\nto\nTo Type\nEdge Type\nTo Release\nTo Genre\nTo Notable\nTo Notoriety Date\n\n\n\n\nSailor Shift\nPerson\nIvy Echos\nMusicalGroup\nDirectlySamples\nNA\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nCode\nselected_types &lt;- c(\"InStyleOf\")\n\nedges_selected &lt;- edges_1st_full_named %&gt;%\n  filter(`Edge Type` %in% selected_types)\n\nknitr::kable(edges_selected)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfrom\nFrom Type\nto\nTo Type\nEdge Type\nTo Release\nTo Genre\nTo Notable\nTo Notoriety Date\n\n\n\n\nSailor Shift\nPerson\nThe Fiddle & The Fjord\nMusicalGroup\nInStyleOf\nNA\nNA\nNA\nNA\n\n\nSailor Shift\nPerson\nThe Saltwater Weavers\nMusicalGroup\nInStyleOf\nNA\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nCode\nselected_types &lt;- c(\"LyricalReferenceTo\")\n\nedges_selected_LyricalReferenceTo &lt;- edges_1st_full_named %&gt;%\n  filter(`Edge Type` %in% selected_types)\n\nknitr::kable(edges_selected_LyricalReferenceTo)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfrom\nFrom Type\nto\nTo Type\nEdge Type\nTo Release\nTo Genre\nTo Notable\nTo Notoriety Date\n\n\n\n\nSailor Shift\nPerson\nDrowned Harbor\nMusicalGroup\nLyricalReferenceTo\nNA\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nCode\nselected_types &lt;- c(\"LyricistOf\")\n\nedges_selected &lt;- edges_1st_full_named %&gt;%\n  filter(`Edge Type` %in% selected_types)\n\nknitr::kable(edges_selected)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfrom\nFrom Type\nto\nTo Type\nEdge Type\nTo Release\nTo Genre\nTo Notable\nTo Notoriety Date\n\n\n\n\nSailor Shift\nPerson\nNeon Heartbeat\nAlbum\nLyricistOf\n2031\nSynthwave\nFALSE\nNA\n\n\nSailor Shift\nPerson\nBallads for the End of Time\nAlbum\nLyricistOf\n2033\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nMelancholy Circuitry\nAlbum\nLyricistOf\n2033\nAmericana\nTRUE\nNA\n\n\nSailor Shift\nPerson\nDrifting Between the Stars and the Sea\nAlbum\nLyricistOf\n2034\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nArtificial Sunsets\nAlbum\nLyricistOf\n2035\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nElectric Reverie\nAlbum\nLyricistOf\n2038\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nBallads for the Low Tide\nAlbum\nLyricistOf\n2037\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTides of Echos\nAlbum\nLyricistOf\n2029\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nHidden Depths\nAlbum\nLyricistOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nThe Kelp Forest Canticles\nAlbum\nLyricistOf\n2024\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nLuminescent Tides\nAlbum\nLyricistOf\n2025\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nShoreline Sonnets\nAlbum\nLyricistOf\n2026\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTidal Pop Waves\nAlbum\nLyricistOf\n2028\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSalty Dreams\nAlbum\nLyricistOf\n2030\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nThe Current & The Chord\nAlbum\nLyricistOf\n2032\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nCoral Beats\nAlbum\nLyricistOf\n2034\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTides & Ballads\nAlbum\nLyricistOf\n2036\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nOceanbound\nAlbum\nLyricistOf\n2038\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nEchoes of the Deep\nAlbum\nLyricistOf\n2040\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTidesworn Ballads\nAlbum\nLyricistOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSubmerged Sonatas\nAlbum\nLyricistOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\n\n\n\n\n\n\n\nCode\nselected_types &lt;- c(\"MemberOf\")\n\nedges_selected &lt;- edges_1st_full_named %&gt;%\n  filter(`Edge Type` %in% selected_types)\n\nknitr::kable(edges_selected)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfrom\nFrom Type\nto\nTo Type\nEdge Type\nTo Release\nTo Genre\nTo Notable\nTo Notoriety Date\n\n\n\n\nSailor Shift\nPerson\nIvy Echos\nMusicalGroup\nMemberOf\nNA\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nCode\nselected_types &lt;- c(\"PerformerOf\")\n\nedges_selected &lt;- edges_1st_full_named %&gt;%\n  filter(`Edge Type` %in% selected_types)\n\nknitr::kable(edges_selected)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfrom\nFrom Type\nto\nTo Type\nEdge Type\nTo Release\nTo Genre\nTo Notable\nTo Notoriety Date\n\n\n\n\nSailor Shift\nPerson\nTidal Pop Waves\nAlbum\nPerformerOf\n2028\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSalty Dreams\nAlbum\nPerformerOf\n2030\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nThe Current & The Chord\nAlbum\nPerformerOf\n2032\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nCoral Beats\nAlbum\nPerformerOf\n2034\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTides & Ballads\nAlbum\nPerformerOf\n2036\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nOceanbound\nAlbum\nPerformerOf\n2038\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nEchoes of the Deep\nAlbum\nPerformerOf\n2040\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nHigh Tide Heartbeat\nSong\nPerformerOf\n2028\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nElectric Eel Love\nSong\nPerformerOf\n2028\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSun-Drenched Daydream\nSong\nPerformerOf\n2028\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nChord of the Deep\nSong\nPerformerOf\n2028\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nHeart of the Habitat\nSong\nPerformerOf\n2030\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nReef Rhythm\nSong\nPerformerOf\n2030\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nDriftwood Lullaby\nSong\nPerformerOf\n2030\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nSaltwater Hymn\nSong\nPerformerOf\n2032\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nMoon Over the Tide\nSong\nPerformerOf\n2034\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nInto the Current\nSong\nPerformerOf\n2034\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nBarnacle Heart\nSong\nPerformerOf\n2034\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nFog & Fiddle\nSong\nPerformerOf\n2036\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nThe Fisherman’s Prayer\nSong\nPerformerOf\n2036\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nStormsong\nSong\nPerformerOf\n2038\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSalt in My Veins\nSong\nPerformerOf\n2040\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nThe Last Mariner\nSong\nPerformerOf\n2040\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nTidesworn Ballads\nAlbum\nPerformerOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSubmerged Sonatas\nAlbum\nPerformerOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSeashell Serenade\nSong\nPerformerOf\n2030\nOceanus Folk\nTRUE\n2030\n\n\n\n\n\n\n\n\nHere is the data preparation for visual all the connect from Sailor\n\n\nCode\nedges_1st_filtered &lt;- edges_1st_full_named %&gt;%\n  filter(`Edge Type` %in% c(\"LyricistOf\", \"PerformerOf\", \"MemberOf\"))\n\nknitr::kable(edges_1st_filtered)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfrom\nFrom Type\nto\nTo Type\nEdge Type\nTo Release\nTo Genre\nTo Notable\nTo Notoriety Date\n\n\n\n\nSailor Shift\nPerson\nNeon Heartbeat\nAlbum\nLyricistOf\n2031\nSynthwave\nFALSE\nNA\n\n\nSailor Shift\nPerson\nBallads for the End of Time\nAlbum\nLyricistOf\n2033\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nMelancholy Circuitry\nAlbum\nLyricistOf\n2033\nAmericana\nTRUE\nNA\n\n\nSailor Shift\nPerson\nDrifting Between the Stars and the Sea\nAlbum\nLyricistOf\n2034\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nArtificial Sunsets\nAlbum\nLyricistOf\n2035\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nElectric Reverie\nAlbum\nLyricistOf\n2038\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nBallads for the Low Tide\nAlbum\nLyricistOf\n2037\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTides of Echos\nAlbum\nLyricistOf\n2029\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nHidden Depths\nAlbum\nLyricistOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nIvy Echos\nMusicalGroup\nMemberOf\nNA\nNA\nNA\nNA\n\n\nSailor Shift\nPerson\nThe Kelp Forest Canticles\nAlbum\nLyricistOf\n2024\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nLuminescent Tides\nAlbum\nLyricistOf\n2025\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nShoreline Sonnets\nAlbum\nLyricistOf\n2026\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTidal Pop Waves\nAlbum\nLyricistOf\n2028\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTidal Pop Waves\nAlbum\nPerformerOf\n2028\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSalty Dreams\nAlbum\nLyricistOf\n2030\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSalty Dreams\nAlbum\nPerformerOf\n2030\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nThe Current & The Chord\nAlbum\nLyricistOf\n2032\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nThe Current & The Chord\nAlbum\nPerformerOf\n2032\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nCoral Beats\nAlbum\nLyricistOf\n2034\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nCoral Beats\nAlbum\nPerformerOf\n2034\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTides & Ballads\nAlbum\nLyricistOf\n2036\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTides & Ballads\nAlbum\nPerformerOf\n2036\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nOceanbound\nAlbum\nLyricistOf\n2038\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nOceanbound\nAlbum\nPerformerOf\n2038\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nEchoes of the Deep\nAlbum\nLyricistOf\n2040\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nEchoes of the Deep\nAlbum\nPerformerOf\n2040\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nHigh Tide Heartbeat\nSong\nPerformerOf\n2028\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nElectric Eel Love\nSong\nPerformerOf\n2028\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSun-Drenched Daydream\nSong\nPerformerOf\n2028\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nChord of the Deep\nSong\nPerformerOf\n2028\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nHeart of the Habitat\nSong\nPerformerOf\n2030\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nReef Rhythm\nSong\nPerformerOf\n2030\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nDriftwood Lullaby\nSong\nPerformerOf\n2030\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nSaltwater Hymn\nSong\nPerformerOf\n2032\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nMoon Over the Tide\nSong\nPerformerOf\n2034\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nInto the Current\nSong\nPerformerOf\n2034\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nBarnacle Heart\nSong\nPerformerOf\n2034\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nFog & Fiddle\nSong\nPerformerOf\n2036\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nThe Fisherman’s Prayer\nSong\nPerformerOf\n2036\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nStormsong\nSong\nPerformerOf\n2038\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSalt in My Veins\nSong\nPerformerOf\n2040\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nThe Last Mariner\nSong\nPerformerOf\n2040\nOceanus Folk\nFALSE\nNA\n\n\nSailor Shift\nPerson\nTidesworn Ballads\nAlbum\nPerformerOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nTidesworn Ballads\nAlbum\nLyricistOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSubmerged Sonatas\nAlbum\nPerformerOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSubmerged Sonatas\nAlbum\nLyricistOf\n2031\nOceanus Folk\nTRUE\nNA\n\n\nSailor Shift\nPerson\nSeashell Serenade\nSong\nPerformerOf\n2030\nOceanus Folk\nTRUE\n2030\n\n\n\n\n\n\n\nAll the connect from Sailor-Song & Album & Group\nedge_colors &lt;- c(\n  \"PerformerOf\"         = \"#2ca02c\",\n\n  \"LyricistOf\"          = \"#1f77b4\",\n \n \n  \"MemberOf\"            = \"#d62728\"\n)\n\nnodes_subgraph &lt;- nodes_all %&gt;%\n  filter(name %in% c(\"Sailor Shift\", edges_1st_filtered$to)) %&gt;%\n  transmute(id = name, label = name, group = `Node Type`)\n\nedges_subgraph &lt;- edges_1st_filtered %&gt;%\n  left_join(\n    nodes_all %&gt;% select(name, `Node Type`) %&gt;% rename(to = name, to_type = `Node Type`),\n    by = \"to\"\n  ) %&gt;%\n  mutate(\n    color = edge_colors[`Edge Type`],\n    title = paste0(\"Edge Type: \", `Edge Type`, \"&lt;br&gt;To Type: \", to_type)\n  ) %&gt;%\n  transmute(\n    from = from,\n    to = to,\n    title = title,\n    color = color,\n    arrows = \"to\"\n  )\n\nedge_legend &lt;- data.frame(\n  label = names(edge_colors),\n  color = unname(edge_colors),\n  arrows = rep(\"to\", length(edge_colors)),\n  stringsAsFactors = FALSE\n)\n\n\n\n\n2.Who has she collaborated with and directly or indirectly influenced?\n\n\n3.How has she influenced collaborators of the broader Oceanus Folk community?\nAnd here is the directly neighbours :\n\n\nCode\nnodes_tbl &lt;- nodes_tbl %&gt;% mutate(index = row_number())\n\nsailor_index &lt;- nodes_tbl %&gt;%\n  filter(name == \"Sailor Shift\") %&gt;%\n  pull(index)\n\ninfluence_edges &lt;- c(\"InStyleOf\", \"CoverOf\", \"InterpolatesFrom\", \"LyricalReferenceTo\", \"DirectlySamples\")\n\nedges_from_sailor &lt;- edges_tbl %&gt;%\n  filter(to == sailor_index & `Edge Type` %in% influence_edges)\n\ninfluenced1 &lt;- edges_from_sailor %&gt;%\n  left_join(nodes_tbl, by = c(\"from\" = \"index\")) %&gt;%\n  select(name, `Edge Type`, everything())\n\n\n\n\nCode\nknitr::kable(influenced1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname\nEdge Type\nsource\ntarget\nkey\nfrom\nto\nNode Type\nsingle\nrelease_date\ngenre\nnotable\nid\nwritten_date\nstage_name\nnotoriety_date\n\n\n\n\nCassette Future\nInStyleOf\n17022\n17255\n0\n17023\n17256\nMusicalGroup\nNA\nNA\nNA\nNA\n17022\nNA\nNA\nNA\n\n\nSilver Veil\nLyricalReferenceTo\n17032\n17255\n0\n17033\n17256\nMusicalGroup\nNA\nNA\nNA\nNA\n17032\nNA\nNA\nNA\n\n\nThe Phantom Operators\nInterpolatesFrom\n17063\n17255\n0\n17064\n17256\nMusicalGroup\nNA\nNA\nNA\nNA\n17063\nNA\nNA\nNA\n\n\nThe Hollow Monarchs\nInStyleOf\n17110\n17255\n0\n17111\n17256\nMusicalGroup\nNA\nNA\nNA\nNA\n17110\nNA\nNA\nNA\n\n\nCassian Storm\nLyricalReferenceTo\n17126\n17255\n0\n17127\n17256\nPerson\nNA\nNA\nNA\nNA\n17126\nNA\nSeraphina Vale\nNA\n\n\nClaire Holmes\nInterpolatesFrom\n17155\n17255\n0\n17156\n17256\nPerson\nNA\nNA\nNA\nNA\n17155\nNA\nJaye Finch\nNA\n\n\nCopper Canyon Ghosts\nDirectlySamples\n17361\n17255\n0\n17362\n17256\nMusicalGroup\nNA\nNA\nNA\nNA\n17361\nNA\nNA\nNA\n\n\n\n\n\n\n\nDirectly neighbours that she has influenced\nsubgraph_in &lt;- extract_subnetwork(\n  graph, \n  node_name = \"Sailor Shift\", \n  distance = 3, \n  direction = \"in\"\n)\n\nedges_vn &lt;- igraph::as_data_frame(subgraph_in, what = \"edges\") %&gt;%\n  filter(`Edge Type` != \"ProducerOf\") %&gt;%\n  rename(from = from, to = to, label = `Edge Type`)\n\nnodes_vn &lt;- igraph::as_data_frame(subgraph_in, what = \"vertices\") %&gt;%\n  mutate(id = name, label = name, group = `Node Type`)\n\nused_nodes &lt;- unique(c(edges_vn$from, edges_vn$to))\nnodes_vn &lt;- nodes_vn %&gt;% filter(id %in% used_nodes)\n\n\nWe attempted to trace Sailor Shift’s indirect influence through songs and albums to identify impacted individuals. However, this approach yielded no results, so we decided not to pursue this path further.\nBased on the results, Copper Canyon Ghosts is identified as an Oceanus Folk band. To explore the third question—“How has Sailor Shift influenced collaborators within the broader Oceanus Folk community?”—we will examine both direct and indirect influence paths .\n\nIdentify the artists and groups influenced by Sailor Shift in Oceanus Folk Genre\nFirst, we identify the artists and groups influenced by Sailor Shift. Among them, we determine which ones belong to the Oceanus Folk genre, using “genre” as our key search indicator.\n\n\nwhich ones belong to the Oceanus Folk genre?\nnodes_tbl &lt;- nodes_tbl %&gt;% mutate(index = row_number())\n\ncreator_names &lt;- c(\n  \"Zara Quinn\", \"Milo Knight\", \"Cassette Future\", \"Eliza Brooks\",\n  \"Jasper Reed\", \"Silver Veil\", \"Juno Ray\", \"Savannah Teal\",\n  \"The Phantom Operators\", \"Chloe Montgomery\", \"Nathaniel Brooks\", \"Clara Davis\",\n  \"The Hollow Monarchs\", \"Cassian Storm\", \"Claire Holmes\", \"Beatrice Albright\",\n  \"Daniel O'Connell\", \"Copper Canyon Ghosts\"\n)\n\ncreator_ids &lt;- nodes_tbl %&gt;%\n  filter(name %in% creator_names) %&gt;%\n  pull(index)\n\ntarget_edge_types &lt;- c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\")\n\nedges_out &lt;- edges_tbl %&gt;%\n  filter(from %in% creator_ids, `Edge Type` %in% target_edge_types)\n\nedges_out_full &lt;- edges_out %&gt;%\n  left_join(nodes_tbl %&gt;% mutate(index = row_number()), by = c(\"to\" = \"index\")) %&gt;%\n  select(from, to, `Edge Type`, name, `Node Type`, release_date,genre,notable,notoriety_date)\n\nedges_out_full &lt;- edges_out_full %&gt;%\n  left_join(nodes_tbl %&gt;% select(index, creator_name = name), by = c(\"from\" = \"index\")) %&gt;%\n  select(creator_name, `Edge Type`, name, `Node Type`, release_date,genre,notable,notoriety_date)\n\n\n\n\nCode\nedges_oceanus &lt;- edges_out_full %&gt;%\n  filter(genre == \"Oceanus Folk\")\n\nknitr::kable(head(edges_oceanus, 6))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncreator_name\nEdge Type\nname\nNode Type\nrelease_date\ngenre\nnotable\nnotoriety_date\n\n\n\n\nBeatrice Albright\nPerformerOf\nTidesworn Ballads\nAlbum\n2031\nOceanus Folk\nTRUE\nNA\n\n\nBeatrice Albright\nLyricistOf\nTidesworn Ballads\nAlbum\n2031\nOceanus Folk\nTRUE\nNA\n\n\nBeatrice Albright\nPerformerOf\nTidesworn Ballads\nAlbum\n2031\nOceanus Folk\nTRUE\nNA\n\n\nBeatrice Albright\nPerformerOf\nThe Siren’s Sigh\nSong\n2031\nOceanus Folk\nTRUE\n2031\n\n\nBeatrice Albright\nPerformerOf\nWhispers on the Jetty Wind\nSong\n2031\nOceanus Folk\nTRUE\n2031\n\n\nBeatrice Albright\nPerformerOf\nMoonlit Kelp Forest Dance\nSong\n2031\nOceanus Folk\nTRUE\n2031\n\n\n\n\n\nThis table summarizes the creative contributions of Beatrice Albright, Daniel O’Connell, and Copper Canyon Ghosts to various albums and songs—all of which are part of the Oceanus Folk genre\n\n\nHow has Sailor Shift influenced collaborators within the broader Oceanus Folk community?\nedges_sailor &lt;- edges_all %&gt;%\n  filter(to == \"Sailor Shift\") %&gt;%\n  filter(`Edge Type` %in% c(\"InStyleOf\", \"LyricalReferenceTo\", \"CoverOf\", \"InterpolatesFrom\", \"DirectlySamples\")) %&gt;%\n  select(from, to, `Edge Type`)\n\ncreator_work_nodes &lt;- unique(c(edges_oceanus$creator_name, edges_oceanus$name))\n\nall_node_names &lt;- union(\n  creator_work_nodes,\n  unique(c(edges_sailor$from, edges_sailor$to, \"Sailor Shift\", \"Copper Canyon Ghosts\"))  \n)\n\nnodes_vn &lt;- nodes_tbl %&gt;%\n  filter(name %in% all_node_names) %&gt;%\n  mutate(\n    id = index,\n    label = name,\n    group = `Node Type`,\n    color.background = ifelse(name == \"Sailor Shift\", \"blue\", NA), \n    shape = ifelse(name == \"Sailor Shift\", \"star\", \"dot\")\n  )\n\nedges_vn_creator &lt;- edges_oceanus %&gt;%\n  rename(from = creator_name, to = name, label = `Edge Type`) %&gt;%\n  left_join(nodes_vn %&gt;% select(name, id), by = c(\"from\" = \"name\")) %&gt;%\n  rename(from_id = id) %&gt;%\n  left_join(nodes_vn %&gt;% select(name, id), by = c(\"to\" = \"name\")) %&gt;%\n  rename(to_id = id) %&gt;%\n  mutate(length = NA) %&gt;%\n  select(from = from_id, to = to_id, label, length) %&gt;%\n  filter(!is.na(from) & !is.na(to))\n\nedges_vn_sailor &lt;- edges_sailor %&gt;%\n  left_join(nodes_vn %&gt;% select(name, id), by = c(\"from\" = \"name\")) %&gt;%\n  rename(from_id = id) %&gt;%\n  left_join(nodes_vn %&gt;% select(name, id), by = c(\"to\" = \"name\")) %&gt;%\n  rename(to_id = id) %&gt;%\n  mutate(length = NA) %&gt;%\n  select(from = from_id, to = to_id, label = `Edge Type`, length) %&gt;%\n  filter(!is.na(from) & !is.na(to))\n\nforced_edge &lt;- tibble(\n  from = \"Copper Canyon Ghosts\",\n  to = \"Sailor Shift\",\n  label = \"DirectlySamples\",\n  length = 400\n)\n\nforced_edge_ids &lt;- forced_edge %&gt;%\n  left_join(nodes_vn %&gt;% select(name, id), by = c(\"from\" = \"name\")) %&gt;%\n  rename(from_id = id) %&gt;%\n  left_join(nodes_vn %&gt;% select(name, id), by = c(\"to\" = \"name\")) %&gt;%\n  rename(to_id = id) %&gt;%\n  select(from = from_id, to = to_id, label, length) %&gt;%\n  filter(!is.na(from) & !is.na(to))\n\nedges_final &lt;- bind_rows(\n  edges_vn_creator,\n  edges_vn_sailor,\n  forced_edge_ids\n)"
  },
  {
    "objectID": "Data_Preparation.html#data-preparation-for-comparison-analysis",
    "href": "Data_Preparation.html#data-preparation-for-comparison-analysis",
    "title": "Data Preparation",
    "section": "Data Preparation for Comparison Analysis",
    "text": "Data Preparation for Comparison Analysis\nTo evaluate the influence and potential of emerging artists, we developed a logistic regression–based talent scoring function that leverages both network centrality and metadata features.\nThe preparation process consists of the following key steps:\n\nIdentifying Notable Contributors\nWe extracted all notable works (i.e., Song or Album nodes marked as notable == TRUE) and identified all persons (nodes of type Person) who contributed to these works through edges such as PerformerOf, ComposerOf, ProducerOf, or LyricistOf.\n\n\nCode\n# Talent scoring function\nprepare_talent_score_from_graph &lt;- function(g_tbl) {\n  nodes &lt;- as_tibble(g_tbl, active = \"nodes\")\n  edges &lt;- as_tibble(g_tbl, active = \"edges\")\n  \n  # Identify notable works\n  notable_work_ids &lt;- nodes %&gt;%\n    filter(Node Type %in% c(\"Song\", \"Album\"), notable == TRUE) %&gt;%\n    pull(index)\n  \n  # Identify contributing persons\n  contributing_persons &lt;- edges %&gt;%\n    filter(to %in% notable_work_ids,\n           Edge Type %in% c(\"PerformerOf\", \"ComposerOf\", \"ProducerOf\", \"LyricistOf\")) %&gt;%\n    pull(from) %&gt;% unique()\n  \n# Prepare person dataframe with genre and recency\n  person_df &lt;- nodes %&gt;%\n    filter(Node Type == \"Person\") %&gt;%\n    select(index, label = node_name, notoriety_date, written_date, genre) %&gt;%\n    mutate(\n      notoriety_year = as.numeric(substr(notoriety_date, 1, 4)),\n      notoriety_recency = pmax(0, 1 - (2025 - notoriety_year) / 20),\n      notable_label = ifelse(index %in% contributing_persons, 1, 0)\n    )\n\n\n\n\nConstructing the Feature Set\nFor each artist (person node), we collected the following features:\n\nDegree Centrality: Measures the number of direct connections within the network.\nPageRank: Captures the artist’s global influence across the network.\nRecency Score: Derived from the artist’s notoriety_date, this measures how recently the artist gained attention (recency declines linearly over 20 years).\n\n\n\nCode\n# Add graph features\n  graph_with_features &lt;- g_tbl %&gt;%\n    activate(nodes) %&gt;%\n    mutate(\n      degree = centrality_degree(),\n      pagerank = centrality_pagerank()\n    )\n  \n  graph_features &lt;- as_tibble(graph_with_features, active = \"nodes\") %&gt;%\n    filter(Node Type == \"Person\") %&gt;%\n    select(index, degree, pagerank)\n\n\n\n\nBinary Label for Notability\nArtists were labeled as “notable” (notable_label = 1) if they contributed to any notable work.\n\n\nModel Training\nA logistic regression model was trained using the three features—degree, pagerank, and notoriety_recency—to predict the likelihood that a given artist is a notable contributor.\n\n\nCode\n# Merge all features\n  features &lt;- person_df %&gt;%\n    left_join(graph_features, by = \"index\") %&gt;%\n    mutate(across(c(degree, pagerank, notoriety_recency), ~replace_na(., 0)))\n\n  # Train logistic regression model\n  if (nrow(features) &lt; 10 || length(unique(features$notable_label)) &lt; 2) {\n    stop(\"❌ Training data insufficient or lacks positive/negative samples.\")\n  }\n\n\n\n\nScoring and Recommendation\nThe model outputs a predicted probability of notability for each artist. These scores are sorted and formatted with natural language descriptions, e.g.,“🎧 Kimberly Snyder shows high influence and recent notoriety. Potential score: 78.5%”\n\n\nCode\nmodel &lt;- glm(notable_label ~ degree + pagerank + notoriety_recency,\n               data = features, family = binomial)\n  \n  # Predict and format results\n  features$predicted_prob &lt;- predict(model, newdata = features, type = \"response\")\n  features &lt;- features %&gt;%\n    arrange(desc(predicted_prob)) %&gt;%\n    mutate(\n      recommendation = paste0(\n        \"🎧 \", label, \" shows \",\n        ifelse(pagerank &gt; 0.5, \"high influence, \", \"moderate impact, \"),\n        ifelse(notoriety_recency &gt; 0.6, \"and recent notoriety. \", \"with steady activity. \"),\n        \"Potential score: \", round(predicted_prob * 100, 1), \"%\"\n      )\n    ) %&gt;%\n    mutate(id = index) %&gt;%  # For visNetwork\n    select(id, label, genre, degree, pagerank, notoriety_year, notoriety_recency,\n           predicted_prob, notable_label, recommendation)\n  \n  return(list(model = model, scored = features))\n}\n\n# Generate result\ntalent_model_result &lt;- prepare_talent_score_from_graph(g_tbl)\ntalent_score_df &lt;- talent_model_result$scored"
  },
  {
    "objectID": "Project_Meeting_Minutes.html",
    "href": "Project_Meeting_Minutes.html",
    "title": "Project Meeting Minutes",
    "section": "",
    "text": "Date: May 17th\nTime: Break of the class\nParticipants: Lucas, Irene\nAgenda\n\nDiscussion on project topic\n\nActions Taken\n\nBoth members expressed interest in the music industry and confirmed Mini Case 1 as the project focus.\nDiscussed individual problem interpretations and agreed to share updates during the next meeting.\nBegan discussing data preparation; despite instruction by Professor Kam, the team explored additional factors for more accurate results.\nBrainstormed key research ideas:\n\n-   Core message to convey\n\n-   Intended methodologies and visualizations\n\nAgreed to prepare for task assignments in the next meeting.\n\nAction Items\n\nExplore visualization methods and potential data perspectives.\nComplete initial data cleaning and import by next meeting.\nPrepare research for task assignments.\n\nNext Meeting: Proposed next week, 7:30 PM (to be confirmed in group chat)\n\n\n\nDate: May 21st\nTime: 8:00 PM\nLocation: SMU Li Ka Shing Library Project Room 5-6\nParticipants: Lucas, Irene\nAgenda\n\nWork assignment discussion\n\nDiscussion\n\nInitially proposed to split Mini Case questions between team members. Instead, decided all members should attempt all questions to encourage diverse perspectives.\nLucas proposed a website concept for a startup called a “Musical AI Agent” offering artist prediction services — “From Zero to Viral” — for record companies, MCNs, and investors. Idea was approved by Irene.\nServices discussed:\n\n-   Artist recommendation & discovery: maximizing success chances\n\n-   Personalized music dashboards\n\n-   Web-based song promotion and genre optimization\n\n-   Relationship networks and time series analytics\n\nNoted: Hybrid GMM + Neural Network Models may be explored later, but not a priority.\nAgreed to delay web design tasks until core problems are solved.\nDiscussed the need to define key success metrics for artists.\n\nAction Items\n\nContinue data preparation and complete Take-Home Exercise 2 individually.\nConduct further research into factors contributing to rising music stars.\nConsider visualization styles for presenting findings.\n\n\n\n\nDate: May 28th, 2025\nTime: 8:00 PM\nLocation: SMU Li Ka Shing Library Project Room 5\nParticipants: Lucas, Irene, Xuerong (XR)\nAgenda\n\nModel Direction Review\nFinalization of Roles and Work Allocation\nEarly Implementation Plans\n\nDiscussion\n\nLucas shared initial visualizations, but the output was cluttered and lacked clear direction.\nIrene suggested applying filters as per the instructor’s guidance and emphasized the need to first clarify key relationships — such as causality and direction — before proceeding with visuals.\nXR proposed using interactive charts to improve exploration, but I recommended focusing on clear, static visuals first before introducing advanced elements.\nLucas proposed starting with logistic regression.\nXR suggested hybrid modeling for genre crossover/diffusion.\nIrene emphasized model interpretability and stakeholder communication.\nConsensus: Start with interpretable models and scale up if time permits.\nRoles assigned based on strengths:\n\nIrene: Influence module (engagement & storytelling)\nXR: Genre Diffusion module (genre mapping & analytics)\nLucas: Trend module (time-series modeling)\n\n\nAction Items\n\nLucas: Begin logistic regression modeling\nIrene: Wireframe Influence dashboard\nXR: Perform EDA on genre clustering\nGroup to meet with module drafts next week\n\n\n\n\nDate: June 7th, 2025\nTime: 7:30 PM\nLocation: Zoom\nParticipants: Lucas, Irene, Xuerong (XR)\nAgenda\n\nDashboard Development\nVisualization Framework\nWeb Architecture Plan\n\nDiscussion\n\nIrene presented Influence dashboard prototype.\nXR shared genre clustering (t-SNE + affinity matrices).\nLucas proposed timeline visual and Shiny app framework.\nNetlify selected for frontend hosting.\nAgreed to create a 3-page Netlify site for dashboard access.\nPrioritized business relevance in technical modules.\n\nDivision of Labour\n\nIrene: Influence module design\nXR: Genre Diffusion visualization\nLucas: Trend modeling & Shiny deployment\n\nAction Items\n\nLucas: Setup Shiny app\nIrene: Refine dashboard interaction\nXR: Finalize genre visuals\nAll: Begin GitHub integration\n\n\n\n\nDate: June 15th, 2025\nTime: 8:30 PM\nLocation: SMU Meeting Pod B1\nParticipants: Lucas, Irene, Xuerong (XR)\nAgenda\n\nPoster Planning\nWebsite Integration\nSubmission Timeline Review\n\nDiscussion\n\nReviewed poster narrative and design.\nLucas embedded initial Shiny app components.\nAgreed to emphasize clarity over excessive visuals.\nXR proposed genre evolution animation for web/poster.\nPoster responsibilities:\n\nIrene: storytelling\nXR: genre stats\nLucas: modeling results\n\nWebsite chosen as central project hub.\n\nIrene advice extracted and processed influence network data (nodes and edges) focusing on artist relationships.\nXR advice filtered and structured data for genre evolution and cluster transitions.\nLucas plan prepared the time-series dataset to enable modeling of artist trends over time.\nAll approved\n\n\nAction Items\n\nLucas: Complete poster layout\nIrene: Stabilize Shiny app and embed in website\nXR: Build genre comparison panel for poster/website\nAll: Finalize poster PDF by June 30\n\n\n\n\nDate: June 29th, 2025\nTime: 8:00 PM\nLocation: Zoom\nParticipants: Lucas, Irene, Xuerong (XR)\nAgenda\n\nFinal Poster Review\nNetlify Web QA\nPresentation Plan\n\nDiscussion\n\nPoster finalized with team visuals\n\nLucas proposed to only put the picture of our outcome with the general summary\nIrene suggest to add some high level insights to the posters let the the audience more easier to read our result and have some take away.\nXR agreed with both put the picture and the text on the poster for rich thinking.\n\nBugs found on mobile — Irene fixed layout\nLucas tested Netlify links\nXR validated Shiny load speed\nRehearsed 5-min pitch: Irene → Lucas → XR\nAdded future expansion section to show scalability\nDiscussed fair peer evaluation strategy\n\nAction Items\n\nIrene: Deploy final Shiny app and update links\nXR: Finalize genre visuals and test compatibility\nLucas: Patch website bugs, upload poster\nAll: Complete slide dry-run by July 4\n\n\n\n\nDate: July 4th, 2025\nTime: 7:30 PM\nLocation: SMU Study Room\nParticipants: Lucas, Irene, Xuerong (XR)\nAgenda\n\nReview Feedbacks from Professor Kam\nFinal Rehearsal\nSubmission Checklist\nReflection Planning\n\nDiscussion\n\nNetwork Graph Module:\nImprove filter logic and refine node/edge display for clearer, more meaningful visuals.\nGenre Diffusion Module:\nAlign layout and style with other modules for visual consistency.\nTrend/Comparison Module:\nRevise sorting and highlight key differences to enhance comparative insights.\nRehearsals completed and timings refined\nFinal checklist completed:\n\nNetlify live link tested\nGitHub updated\nPoster PDF uploaded\n\nWebsite confirmed as project hub\nReflected on teamwork, learning, and constraints\nDecided to write and merge reflection paragraphs by July 6\n\nAction Items\n\nLucas: Finalize GitHub and Submit presentation script\nIrene: Shiny deployment and website developing\nXR: Contribute to team reflection ,final testing and peer evaluation\nAll: Ready for improvement and presentation on July 5 and final submission on July 6"
  },
  {
    "objectID": "Project_Meeting_Minutes.html#project-minutes-of-meeting",
    "href": "Project_Meeting_Minutes.html#project-minutes-of-meeting",
    "title": "Project Meeting Minutes",
    "section": "",
    "text": "Date: May 17th\nTime: Break of the class\nParticipants: Lucas, Irene\nAgenda\n\nDiscussion on project topic\n\nActions Taken\n\nBoth members expressed interest in the music industry and confirmed Mini Case 1 as the project focus.\nDiscussed individual problem interpretations and agreed to share updates during the next meeting.\nBegan discussing data preparation; despite instruction by Professor Kam, the team explored additional factors for more accurate results.\nBrainstormed key research ideas:\n\n-   Core message to convey\n\n-   Intended methodologies and visualizations\n\nAgreed to prepare for task assignments in the next meeting.\n\nAction Items\n\nExplore visualization methods and potential data perspectives.\nComplete initial data cleaning and import by next meeting.\nPrepare research for task assignments.\n\nNext Meeting: Proposed next week, 7:30 PM (to be confirmed in group chat)\n\n\n\nDate: May 21st\nTime: 8:00 PM\nLocation: SMU Li Ka Shing Library Project Room 5-6\nParticipants: Lucas, Irene\nAgenda\n\nWork assignment discussion\n\nDiscussion\n\nInitially proposed to split Mini Case questions between team members. Instead, decided all members should attempt all questions to encourage diverse perspectives.\nLucas proposed a website concept for a startup called a “Musical AI Agent” offering artist prediction services — “From Zero to Viral” — for record companies, MCNs, and investors. Idea was approved by Irene.\nServices discussed:\n\n-   Artist recommendation & discovery: maximizing success chances\n\n-   Personalized music dashboards\n\n-   Web-based song promotion and genre optimization\n\n-   Relationship networks and time series analytics\n\nNoted: Hybrid GMM + Neural Network Models may be explored later, but not a priority.\nAgreed to delay web design tasks until core problems are solved.\nDiscussed the need to define key success metrics for artists.\n\nAction Items\n\nContinue data preparation and complete Take-Home Exercise 2 individually.\nConduct further research into factors contributing to rising music stars.\nConsider visualization styles for presenting findings.\n\n\n\n\nDate: May 28th, 2025\nTime: 8:00 PM\nLocation: SMU Li Ka Shing Library Project Room 5\nParticipants: Lucas, Irene, Xuerong (XR)\nAgenda\n\nModel Direction Review\nFinalization of Roles and Work Allocation\nEarly Implementation Plans\n\nDiscussion\n\nLucas shared initial visualizations, but the output was cluttered and lacked clear direction.\nIrene suggested applying filters as per the instructor’s guidance and emphasized the need to first clarify key relationships — such as causality and direction — before proceeding with visuals.\nXR proposed using interactive charts to improve exploration, but I recommended focusing on clear, static visuals first before introducing advanced elements.\nLucas proposed starting with logistic regression.\nXR suggested hybrid modeling for genre crossover/diffusion.\nIrene emphasized model interpretability and stakeholder communication.\nConsensus: Start with interpretable models and scale up if time permits.\nRoles assigned based on strengths:\n\nIrene: Influence module (engagement & storytelling)\nXR: Genre Diffusion module (genre mapping & analytics)\nLucas: Trend module (time-series modeling)\n\n\nAction Items\n\nLucas: Begin logistic regression modeling\nIrene: Wireframe Influence dashboard\nXR: Perform EDA on genre clustering\nGroup to meet with module drafts next week\n\n\n\n\nDate: June 7th, 2025\nTime: 7:30 PM\nLocation: Zoom\nParticipants: Lucas, Irene, Xuerong (XR)\nAgenda\n\nDashboard Development\nVisualization Framework\nWeb Architecture Plan\n\nDiscussion\n\nIrene presented Influence dashboard prototype.\nXR shared genre clustering (t-SNE + affinity matrices).\nLucas proposed timeline visual and Shiny app framework.\nNetlify selected for frontend hosting.\nAgreed to create a 3-page Netlify site for dashboard access.\nPrioritized business relevance in technical modules.\n\nDivision of Labour\n\nIrene: Influence module design\nXR: Genre Diffusion visualization\nLucas: Trend modeling & Shiny deployment\n\nAction Items\n\nLucas: Setup Shiny app\nIrene: Refine dashboard interaction\nXR: Finalize genre visuals\nAll: Begin GitHub integration\n\n\n\n\nDate: June 15th, 2025\nTime: 8:30 PM\nLocation: SMU Meeting Pod B1\nParticipants: Lucas, Irene, Xuerong (XR)\nAgenda\n\nPoster Planning\nWebsite Integration\nSubmission Timeline Review\n\nDiscussion\n\nReviewed poster narrative and design.\nLucas embedded initial Shiny app components.\nAgreed to emphasize clarity over excessive visuals.\nXR proposed genre evolution animation for web/poster.\nPoster responsibilities:\n\nIrene: storytelling\nXR: genre stats\nLucas: modeling results\n\nWebsite chosen as central project hub.\n\nIrene advice extracted and processed influence network data (nodes and edges) focusing on artist relationships.\nXR advice filtered and structured data for genre evolution and cluster transitions.\nLucas plan prepared the time-series dataset to enable modeling of artist trends over time.\nAll approved\n\n\nAction Items\n\nLucas: Complete poster layout\nIrene: Stabilize Shiny app and embed in website\nXR: Build genre comparison panel for poster/website\nAll: Finalize poster PDF by June 30\n\n\n\n\nDate: June 29th, 2025\nTime: 8:00 PM\nLocation: Zoom\nParticipants: Lucas, Irene, Xuerong (XR)\nAgenda\n\nFinal Poster Review\nNetlify Web QA\nPresentation Plan\n\nDiscussion\n\nPoster finalized with team visuals\n\nLucas proposed to only put the picture of our outcome with the general summary\nIrene suggest to add some high level insights to the posters let the the audience more easier to read our result and have some take away.\nXR agreed with both put the picture and the text on the poster for rich thinking.\n\nBugs found on mobile — Irene fixed layout\nLucas tested Netlify links\nXR validated Shiny load speed\nRehearsed 5-min pitch: Irene → Lucas → XR\nAdded future expansion section to show scalability\nDiscussed fair peer evaluation strategy\n\nAction Items\n\nIrene: Deploy final Shiny app and update links\nXR: Finalize genre visuals and test compatibility\nLucas: Patch website bugs, upload poster\nAll: Complete slide dry-run by July 4\n\n\n\n\nDate: July 4th, 2025\nTime: 7:30 PM\nLocation: SMU Study Room\nParticipants: Lucas, Irene, Xuerong (XR)\nAgenda\n\nReview Feedbacks from Professor Kam\nFinal Rehearsal\nSubmission Checklist\nReflection Planning\n\nDiscussion\n\nNetwork Graph Module:\nImprove filter logic and refine node/edge display for clearer, more meaningful visuals.\nGenre Diffusion Module:\nAlign layout and style with other modules for visual consistency.\nTrend/Comparison Module:\nRevise sorting and highlight key differences to enhance comparative insights.\nRehearsals completed and timings refined\nFinal checklist completed:\n\nNetlify live link tested\nGitHub updated\nPoster PDF uploaded\n\nWebsite confirmed as project hub\nReflected on teamwork, learning, and constraints\nDecided to write and merge reflection paragraphs by July 6\n\nAction Items\n\nLucas: Finalize GitHub and Submit presentation script\nIrene: Shiny deployment and website developing\nXR: Contribute to team reflection ,final testing and peer evaluation\nAll: Ready for improvement and presentation on July 5 and final submission on July 6"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EchoScope™ — Discovering Music Influence Through Visual Analytics",
    "section": "",
    "text": "Discovering music influence and rising stars through interactive visual analytics"
  },
  {
    "objectID": "index.html#welcome-to-echoscope",
    "href": "index.html#welcome-to-echoscope",
    "title": "EchoScope™ — Discovering Music Influence Through Visual Analytics",
    "section": "🎧 Welcome to EchoScope™",
    "text": "🎧 Welcome to EchoScope™\nEchoScope™ is a web-based visual analytics prototype built for the ISSS608 Visual Analytics course project. It uses VAST 2025 Mini-Challenge 1 data to explore the artistic evolution of Sailor Shift and the influence of Oceanus Folk on global music.\nOur dashboard simulates a modern SaaS platform, offering interactive graphs and dashboards similar in experience to Apple Music, allowing music analysts, A&R managers, and cultural researchers to explore trends and talent."
  },
  {
    "objectID": "index.html#project-goals",
    "href": "index.html#project-goals",
    "title": "EchoScope™ — Discovering Music Influence Through Visual Analytics",
    "section": "🔍 Project Goals",
    "text": "🔍 Project Goals\n\nTrace influence paths of iconic artists\nAnalyze the genre evolution of Oceanus Folk\nPredict rising stars based on data and influence scores\nDemonstrate how network science and visual analytics can support cultural insight"
  },
  {
    "objectID": "index.html#case-data-sample",
    "href": "index.html#case-data-sample",
    "title": "EchoScope™ — Discovering Music Influence Through Visual Analytics",
    "section": "📂 Case Data Sample",
    "text": "📂 Case Data Sample\n\n17,000+ nodes: artists, genres, songs, producers\n37,000+ edges: performer links, stylistic influence, collaborations\nKey attributes: notoriety_date, PerformerOf, InStyleOf, genre, notable"
  },
  {
    "objectID": "index.html#functional-modules",
    "href": "index.html#functional-modules",
    "title": "EchoScope™ — Discovering Music Influence Through Visual Analytics",
    "section": "🧩 Functional Modules",
    "text": "🧩 Functional Modules\n\n\n\n\n\n\n\nModule\nDescription\n\n\n\n\n🎼 Influence Graph\nExplore Sailor Shift’s direct and extended influence network (1–3 hops)\n\n\n🔥 Genre Diffusion\nTrack the evolution and diffusion of Oceanus Folk and related genres over time\n\n\n🚀 Talent Radar\nDetect emerging talent through multi-criteria scoring and visual comparison\n\n\n📊 Trend Dashboard\nAnalyze stylistic patterns by genre, artist, and time across the full dataset"
  },
  {
    "objectID": "index.html#explore-the-dashboard",
    "href": "index.html#explore-the-dashboard",
    "title": "EchoScope™ — Discovering Music Influence Through Visual Analytics",
    "section": "💡 Explore the Dashboard",
    "text": "💡 Explore the Dashboard\nClick the tabs in the navigation bar to interact with each module:\n\nInfluence Graph – Dynamic visNetwork graph of Sailor Shift’s artistic web\nGenre Diffusion – Area chart + stacked plot of evolving genres\nTalent Radar – Radar comparison of rising artists\nAbout – Methodology, team, and acknowledgments"
  },
  {
    "objectID": "index.html#built-with",
    "href": "index.html#built-with",
    "title": "EchoScope™ — Discovering Music Influence Through Visual Analytics",
    "section": "👨‍🎓 Built With",
    "text": "👨‍🎓 Built With\n\nQuarto + Shiny\nnetworkx, visNetwork, plotly, echarts4r\nDesigned with an Apple Music-inspired aesthetic\n\n\n© 2025 EchoScope Project — Created for academic purposes under SMU ISSS608"
  },
  {
    "objectID": "genre_diffusion_analysis.html",
    "href": "genre_diffusion_analysis.html",
    "title": "EchoScope™",
    "section": "",
    "text": "The diffusion of musical influence represents a crucial mechanism for understanding genre evolution, artistic innovation, and cross-style hybridity. In this section, we investigate the genre Oceanus Folk as both a progenitor and recipient of stylistic influence using EchoScope™’s Genre Diffusion Tracker. Specifically, we analyze the directional impact of Oceanus Folk before and after the fame of Sailor Shift in 2012, and examine how this genre propagates across musical ecosystems through influence networks, genre timelines, and layered Sankey transitions.\n\n\n\n\nTo understand the structural propagation of Oceanus Folk, we employed 1-hop influence graphs filtered by time (1990–2025) and node type (track-level granularity). The networks were divided temporally by the Sailor Shift Fame Year (2012).\n\n\nPrior to 2012, the Pre-Fame Influence Network demonstrates a localized and compact topology, characterized by genre-internal propagation. Central nodes such as:\n\n“Beyond Our Limitations”\n“Exile’s Whisper”\n“Whispers of a Wandering Soul”\n\nemerge as formative tracks within a tightly coupled cluster. The dominance of green and yellow nodes (Oceanus Folk tracks) suggests that the genre’s early phase was self-referential—marked by genre consolidation rather than cross-pollination.\n\n\n\nFollowing Sailor Shift’s rise to fame, the Post-Fame Network exhibits a marked increase in node volume, diversity, and centrality dispersion. Notably, Oceanus Folk begins to act as a genre-exporting hub, influencing a broader set of genres including:\n\nIndie Folk (e.g., Ripples and Whispers, Beyond Our Limitations)\nSynthpop (e.g., Echo Chamber Records, Unique Frequencies)\nAlternative Rock (e.g., Destiny’s Call)\n\nThe emergence of blue and pink nodes indicates a transition from genre insulation to genre integration, where Oceanus Folk motifs begin embedding within distinct musical contexts.\n\n\n\n\n\nThe Timeline Trend Visualization provides longitudinal evidence of genre diffusion intensity. From 1990 to 2010, Oceanus Folk’s influence remained relatively stable, rarely surpassing 100 affected nodes per year. Post-2012, however, a periodic spike pattern is observable, peaking in:\n\n2012 (coinciding with Sailor Shift’s fame)\n2015, 2018, 2021, 2023 — with affected node counts exceeding 250–300\n\n\n\nFrom the area chart, several genres show coordinated upward trends aligned with Oceanus Folk’s diffusion spikes:\n\nAvant-Garde Folk and Darkwave show strong co-movement, suggesting a textural or thematic compatibility\nAlternative Rock and Desert Rock gradually absorb Oceanus Folk’s emotive storytelling and layered acoustics\n\nThis evidence suggests that Oceanus Folk has become a trans-genre catalyst, capable of instigating genre-wide innovation cycles rather than merely linear transmission.\n\n\n\n\n\nUsing the Top-N Influenced Artists module, we evaluated the extent of Oceanus Folk’s artistic legacy through quantitative metrics.\n\n\n\n\n\n\n\n\n\n\n\nArtist\nGenre\nInfluence Count\nNotes\n\n\n\n\nRipples and Whispers\nIndie Folk\n50+\nMajor inheritor of stylistic DNA\n\n\nEcho Chamber Records\nSynthpop\n~10\nCross-genre converter\n\n\nBeyond Our Limitations\nOceanus Folk\n~12\nMaintains intra-genre continuity\n\n\n\n\n\n\n\nArtists such as Spiegel Harmony, Trembling Syringe, and Clocktower Cadence reflect cross-pollination between Oceanus Folk and electronic/ambient genres\nLesser-known indie entities like Grip and Grace, Cresens Studios, and Hauteur-Core Records indicate diffusion into the long tail of the music industry\nThe inclusion of Unique Frequencies within Synthpop suggests that Oceanus Folk influence is not genre-bound, but adaptable to production modality\n\n\n\n\n\n\nThe Layered Genre-Artist Sankey Diagram operationalizes influence as directional flows. Key structural transitions include:\n\n\n\nOceanus Folk → Ripples and Whispers → Indie Folk\nRepresents the most direct and voluminous influence transition\n\n\n\n\n\nOceanus Folk → Echo Chamber Records → Synthpop\nIllustrates genre expansion into electronic and digital domains\nFeedback Loops (e.g., Ripples and Whispers → Echo Chamber Records → Oceanus Folk):\nReveal recursive dynamics, suggesting Oceanus Folk evolves by reabsorbing its own stylistic exports\n\nThis multilayered flow analysis supports the thesis that Oceanus Folk acts both as a source and recipient of innovation—a genre that circulates influence bi-directionally.\n\n\n\n\n\nThe Genre Diffusion analysis presents Oceanus Folk as a dynamic, recursive, and outwardly radiating genre. From 1990 to 2025, it has transitioned from a niche musical identity into a genre engine—influencing artists across temporal phases and stylistic boundaries.\nKey takeaways include:\n\nThe 2012 inflection point marks a statistically and structurally significant transformation in the genre’s influence behavior\nOceanus Folk’s motifs are highly transferable, allowing it to infiltrate diverse genres such as Synthpop, Indie Folk, and Darkwave\nThe genre exhibits a non-linear, cyclical propagation pattern, driven by both artistic innovation and network connectivity\n\n\nIn sum, Oceanus Folk is not a static genre classification but a living influence ecosystem—continuously absorbing, emitting, and evolving across the musical landscape."
  },
  {
    "objectID": "genre_diffusion_analysis.html#genre-diffusion-analysis-tracing-the-evolutionary-influence-of-oceanus-folk",
    "href": "genre_diffusion_analysis.html#genre-diffusion-analysis-tracing-the-evolutionary-influence-of-oceanus-folk",
    "title": "EchoScope™",
    "section": "",
    "text": "The diffusion of musical influence represents a crucial mechanism for understanding genre evolution, artistic innovation, and cross-style hybridity. In this section, we investigate the genre Oceanus Folk as both a progenitor and recipient of stylistic influence using EchoScope™’s Genre Diffusion Tracker. Specifically, we analyze the directional impact of Oceanus Folk before and after the fame of Sailor Shift in 2012, and examine how this genre propagates across musical ecosystems through influence networks, genre timelines, and layered Sankey transitions.\n\n\n\n\nTo understand the structural propagation of Oceanus Folk, we employed 1-hop influence graphs filtered by time (1990–2025) and node type (track-level granularity). The networks were divided temporally by the Sailor Shift Fame Year (2012).\n\n\nPrior to 2012, the Pre-Fame Influence Network demonstrates a localized and compact topology, characterized by genre-internal propagation. Central nodes such as:\n\n“Beyond Our Limitations”\n“Exile’s Whisper”\n“Whispers of a Wandering Soul”\n\nemerge as formative tracks within a tightly coupled cluster. The dominance of green and yellow nodes (Oceanus Folk tracks) suggests that the genre’s early phase was self-referential—marked by genre consolidation rather than cross-pollination.\n\n\n\nFollowing Sailor Shift’s rise to fame, the Post-Fame Network exhibits a marked increase in node volume, diversity, and centrality dispersion. Notably, Oceanus Folk begins to act as a genre-exporting hub, influencing a broader set of genres including:\n\nIndie Folk (e.g., Ripples and Whispers, Beyond Our Limitations)\nSynthpop (e.g., Echo Chamber Records, Unique Frequencies)\nAlternative Rock (e.g., Destiny’s Call)\n\nThe emergence of blue and pink nodes indicates a transition from genre insulation to genre integration, where Oceanus Folk motifs begin embedding within distinct musical contexts.\n\n\n\n\n\nThe Timeline Trend Visualization provides longitudinal evidence of genre diffusion intensity. From 1990 to 2010, Oceanus Folk’s influence remained relatively stable, rarely surpassing 100 affected nodes per year. Post-2012, however, a periodic spike pattern is observable, peaking in:\n\n2012 (coinciding with Sailor Shift’s fame)\n2015, 2018, 2021, 2023 — with affected node counts exceeding 250–300\n\n\n\nFrom the area chart, several genres show coordinated upward trends aligned with Oceanus Folk’s diffusion spikes:\n\nAvant-Garde Folk and Darkwave show strong co-movement, suggesting a textural or thematic compatibility\nAlternative Rock and Desert Rock gradually absorb Oceanus Folk’s emotive storytelling and layered acoustics\n\nThis evidence suggests that Oceanus Folk has become a trans-genre catalyst, capable of instigating genre-wide innovation cycles rather than merely linear transmission.\n\n\n\n\n\nUsing the Top-N Influenced Artists module, we evaluated the extent of Oceanus Folk’s artistic legacy through quantitative metrics.\n\n\n\n\n\n\n\n\n\n\n\nArtist\nGenre\nInfluence Count\nNotes\n\n\n\n\nRipples and Whispers\nIndie Folk\n50+\nMajor inheritor of stylistic DNA\n\n\nEcho Chamber Records\nSynthpop\n~10\nCross-genre converter\n\n\nBeyond Our Limitations\nOceanus Folk\n~12\nMaintains intra-genre continuity\n\n\n\n\n\n\n\nArtists such as Spiegel Harmony, Trembling Syringe, and Clocktower Cadence reflect cross-pollination between Oceanus Folk and electronic/ambient genres\nLesser-known indie entities like Grip and Grace, Cresens Studios, and Hauteur-Core Records indicate diffusion into the long tail of the music industry\nThe inclusion of Unique Frequencies within Synthpop suggests that Oceanus Folk influence is not genre-bound, but adaptable to production modality\n\n\n\n\n\n\nThe Layered Genre-Artist Sankey Diagram operationalizes influence as directional flows. Key structural transitions include:\n\n\n\nOceanus Folk → Ripples and Whispers → Indie Folk\nRepresents the most direct and voluminous influence transition\n\n\n\n\n\nOceanus Folk → Echo Chamber Records → Synthpop\nIllustrates genre expansion into electronic and digital domains\nFeedback Loops (e.g., Ripples and Whispers → Echo Chamber Records → Oceanus Folk):\nReveal recursive dynamics, suggesting Oceanus Folk evolves by reabsorbing its own stylistic exports\n\nThis multilayered flow analysis supports the thesis that Oceanus Folk acts both as a source and recipient of innovation—a genre that circulates influence bi-directionally.\n\n\n\n\n\nThe Genre Diffusion analysis presents Oceanus Folk as a dynamic, recursive, and outwardly radiating genre. From 1990 to 2025, it has transitioned from a niche musical identity into a genre engine—influencing artists across temporal phases and stylistic boundaries.\nKey takeaways include:\n\nThe 2012 inflection point marks a statistically and structurally significant transformation in the genre’s influence behavior\nOceanus Folk’s motifs are highly transferable, allowing it to infiltrate diverse genres such as Synthpop, Indie Folk, and Darkwave\nThe genre exhibits a non-linear, cyclical propagation pattern, driven by both artistic innovation and network connectivity\n\n\nIn sum, Oceanus Folk is not a static genre classification but a living influence ecosystem—continuously absorbing, emitting, and evolving across the musical landscape."
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "EchoScope™",
    "section": "",
    "text": "EchoScope™ — A Visual Analytics Prototype for Music Influence Exploration\n\n\n\n\n\n\nThe music industry lacks intuitive tools to visually trace influence, discover emerging talents, and understand genre diffusion. Existing dashboards are often statistical, but not exploratory or network-driven.\n\n\n\nUsing Mini-Challenge 1 (VAST 2025) data, we propose EchoScope — a visual analytics tool to explore Sailor Shift’s influence and the rise of Oceanus Folk through interactive visualizations built with Shiny and network graphs.\n\n\n\nTo build this system, we analyzed:\n\n17,000+ nodes representing artists, genres, producers, and songs\n\n37,000+ edges including collaboration, stylistic influence, production, and genre classification\n\nKey fields: notoriety_date, notable, InStyleOf, PerformerOf, genre\n\n\n\n\n\n\nEchoScope™ is a conceptual SaaS-like platform that combines:\n\nMusic knowledge graphs\n\nGenre diffusion analysis\n\nArtist influence scoring\n\nIt is designed to simulate a data product that helps:\n\n🎧 Music platforms discover new talents\n\n🏷️ Labels map influence networks\n\n📊 Brands and analysts follow genre evolution\n\n\n🎯 Vision: Use visual analytics + graph intelligence to discover the next “Sailor Shift.”\n\n\n\n\n\nWe treat Mini-Challenge 1 as a real-world business question:\n\nHow can we analyze the career of Sailor Shift and uncover the influence of Oceanus Folk?\n\nEchoScope addresses this through exploratory visual analytics features.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nModule Name\nFunctionality\nBusiness Value\n\n\n\n\n🎼 Influence Graph Studio\nBuilds 1–3 hop influence network from Sailor and others\nUnderstand artist leverage and collaboration value\n\n\n🔥 Genre Diffusion Tracker\nTracks Oceanus Folk’s stylistic evolution and diffusion\nReveal cultural trends and genre crossovers\n\n\n🚀 Talent Score Engine\nPredicts future breakout artists using graph and song metrics\nHelps in signing, scouting, and artist incubation\n\n\n📊 Trend Analytics Dashboard\nGenerates interactive genre/artist/time reports\nAssists marketing, content, and PR strategies\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nScenario\nRole\nInteraction Description\n\n\n\n\nTalent Scouting\nA&R Manager\nInput genre → Get Top 10 rising stars with influence score\n\n\nCampaign Planning\nMarketing\nFilter by region + trend → Identify target collaborations\n\n\nBrand Matching\nBrand Lead\nUse graph to explore matching artist style\n\n\nCatalog Curation\nMusic Editor\nTrack genre evolution to curate songs accordingly\n\n\n\n\n\n\n\n\n\n\nQuarter\nGoal\n\n\n\n\nQ1\nBuild V1 prototype (Oceanus Folk + Sailor graph)\n\n\nQ2\nAdd scoring model and timeline charts\n\n\nQ3\nExpand genres and add user customization options\n\n\nQ4\nDemo full use case with Shiny + deployment-ready site\n\n\n\n\n\n\n\n\nData Analytics: Graph modeling, centrality, genre signal detection\n\nShiny Prototyping: Frontend layout, visual rendering, interactivity\n\n\nEchoScope is not just a course project — it simulates how visual analytics can empower cultural discovery.\n\n\n\n\n\n\n\n\n\nHome – Project description, Sailor Shift bio, goal overview\n\nInfluence Graph – Dynamic visNetwork with adjustable depth, filters by genre/year\n\nGenre Diffusion – Interactive timeline and genre flow chart\n\nTalent Radar – Artist radar chart based on scoring algorithm, download option\n\nAbout – Team roles, methodology, and reflection\n\n\n\n\n\n\n\n\n\n\n\nInput Controls\nOutput Visualizations\n\n\n\n\nSelect Artist / Node\nInteractive network (1–3 hop ego graph)\n\n\nChoose Time Range\nTimeline chart, genre progression map\n\n\nFilter by Genre / Notability\nTalent radar score & filtered influence list\n\n\nDownload Panel\nExport PNG/PDF/CSV from each module\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUI prototype for Genre Diffusion Tracker"
  },
  {
    "objectID": "proposal.html#echoscope-leveraging-visual-analytics-graph-intelligence-to-explore-music-influence-with-sailor-shift",
    "href": "proposal.html#echoscope-leveraging-visual-analytics-graph-intelligence-to-explore-music-influence-with-sailor-shift",
    "title": "EchoScope™",
    "section": "",
    "text": "EchoScope™ — A Visual Analytics Prototype for Music Influence Exploration\n\n\n\n\n\n\nThe music industry lacks intuitive tools to visually trace influence, discover emerging talents, and understand genre diffusion. Existing dashboards are often statistical, but not exploratory or network-driven.\n\n\n\nUsing Mini-Challenge 1 (VAST 2025) data, we propose EchoScope — a visual analytics tool to explore Sailor Shift’s influence and the rise of Oceanus Folk through interactive visualizations built with Shiny and network graphs.\n\n\n\nTo build this system, we analyzed:\n\n17,000+ nodes representing artists, genres, producers, and songs\n\n37,000+ edges including collaboration, stylistic influence, production, and genre classification\n\nKey fields: notoriety_date, notable, InStyleOf, PerformerOf, genre\n\n\n\n\n\n\nEchoScope™ is a conceptual SaaS-like platform that combines:\n\nMusic knowledge graphs\n\nGenre diffusion analysis\n\nArtist influence scoring\n\nIt is designed to simulate a data product that helps:\n\n🎧 Music platforms discover new talents\n\n🏷️ Labels map influence networks\n\n📊 Brands and analysts follow genre evolution\n\n\n🎯 Vision: Use visual analytics + graph intelligence to discover the next “Sailor Shift.”\n\n\n\n\n\nWe treat Mini-Challenge 1 as a real-world business question:\n\nHow can we analyze the career of Sailor Shift and uncover the influence of Oceanus Folk?\n\nEchoScope addresses this through exploratory visual analytics features.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nModule Name\nFunctionality\nBusiness Value\n\n\n\n\n🎼 Influence Graph Studio\nBuilds 1–3 hop influence network from Sailor and others\nUnderstand artist leverage and collaboration value\n\n\n🔥 Genre Diffusion Tracker\nTracks Oceanus Folk’s stylistic evolution and diffusion\nReveal cultural trends and genre crossovers\n\n\n🚀 Talent Score Engine\nPredicts future breakout artists using graph and song metrics\nHelps in signing, scouting, and artist incubation\n\n\n📊 Trend Analytics Dashboard\nGenerates interactive genre/artist/time reports\nAssists marketing, content, and PR strategies\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nScenario\nRole\nInteraction Description\n\n\n\n\nTalent Scouting\nA&R Manager\nInput genre → Get Top 10 rising stars with influence score\n\n\nCampaign Planning\nMarketing\nFilter by region + trend → Identify target collaborations\n\n\nBrand Matching\nBrand Lead\nUse graph to explore matching artist style\n\n\nCatalog Curation\nMusic Editor\nTrack genre evolution to curate songs accordingly\n\n\n\n\n\n\n\n\n\n\nQuarter\nGoal\n\n\n\n\nQ1\nBuild V1 prototype (Oceanus Folk + Sailor graph)\n\n\nQ2\nAdd scoring model and timeline charts\n\n\nQ3\nExpand genres and add user customization options\n\n\nQ4\nDemo full use case with Shiny + deployment-ready site\n\n\n\n\n\n\n\n\nData Analytics: Graph modeling, centrality, genre signal detection\n\nShiny Prototyping: Frontend layout, visual rendering, interactivity\n\n\nEchoScope is not just a course project — it simulates how visual analytics can empower cultural discovery.\n\n\n\n\n\n\n\n\n\nHome – Project description, Sailor Shift bio, goal overview\n\nInfluence Graph – Dynamic visNetwork with adjustable depth, filters by genre/year\n\nGenre Diffusion – Interactive timeline and genre flow chart\n\nTalent Radar – Artist radar chart based on scoring algorithm, download option\n\nAbout – Team roles, methodology, and reflection\n\n\n\n\n\n\n\n\n\n\n\nInput Controls\nOutput Visualizations\n\n\n\n\nSelect Artist / Node\nInteractive network (1–3 hop ego graph)\n\n\nChoose Time Range\nTimeline chart, genre progression map\n\n\nFilter by Genre / Notability\nTalent radar score & filtered influence list\n\n\nDownload Panel\nExport PNG/PDF/CSV from each module\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUI prototype for Genre Diffusion Tracker"
  },
  {
    "objectID": "proposal.html#project-schedule",
    "href": "proposal.html#project-schedule",
    "title": "EchoScope™",
    "section": "Project Schedule",
    "text": "Project Schedule\nBelow is an overview of our project timeline.\n\n\nCode\nlibrary(tidyverse)\nlibrary(lubridate)\n\n# 任务排期\nschedule_df &lt;- tibble(\n  task = c(\n    \"Proposal Brainstorming\", \"Proposal Editing & Publishing\",\n    \"R Quarto / Netlify Setup\", \"R Shiny App Development\",\n    \"User Guide Drafting\", \"Poster Design\", \"Poster Uploading\",\n    \"Poster Presentation\", \"Final Submission\"\n  ),\n  start = as.Date(c(\n    \"2025-06-01\", \"2025-06-05\", \"2025-06-09\", \"2025-06-18\",\n    \"2025-06-22\", \"2025-06-10\", \"2025-06-25\", \"2025-07-02\", \"2025-06-28\"\n  )),\n  end = as.Date(c(\n    \"2025-06-04\", \"2025-06-08\", \"2025-06-14\", \"2025-06-27\",\n    \"2025-06-30\", \"2025-06-24\", \"2025-06-26\", \"2025-07-02\", \"2025-07-06\"\n  )),\n  category = c(\n    \"Proposal\", \"Proposal\", \"Development\", \"Development\",\n    \"Documentation\", \"Poster\", \"Poster\", \"Presentation\", \"Submission\"\n  )\n)\n\n# 关键日期\ndue_dates &lt;- tibble(\n  label = c(\"Due 8 Jun\", \"Due 26 Jun\", \"Due 2 Jul\", \"Due 6 Jul\"),\n  date = as.Date(c(\"2025-06-08\", \"2025-06-26\", \"2025-07-02\", \"2025-07-06\"))\n)\n\n# 日期标注额外字段（展示完整日期）\ndue_dates &lt;- due_dates %&gt;%\n  mutate(date_str = format(date, \"%b %d\"))\n\n# 颜色\ncolors &lt;- c(\n  \"Proposal\" = \"#1b9e77\", \"Development\" = \"#d95f02\", \"Documentation\" = \"#7570b3\",\n  \"Poster\" = \"#e7298a\", \"Presentation\" = \"#66a61e\", \"Submission\" = \"#e6ab02\"\n)\n\nmax_y &lt;- length(unique(schedule_df$task)) + 1\n\n# 绘图\nggplot(schedule_df, aes(x = start, xend = end, y = task, yend = task, color = category)) +\n  geom_segment(size = 6, lineend = \"round\") +\n  geom_vline(data = due_dates, aes(xintercept = date), color = \"red\", linetype = \"dashed\") +\n  geom_text(\n    data = due_dates,\n    mapping = aes(x = date, label = paste(label, \"\\n\", date_str)),\n    y = max_y,\n    inherit.aes = FALSE,\n    color = \"red\", size = 3.5, vjust = 0\n  ) +\n  scale_color_manual(values = colors) +\n  labs(title = \"EchoScope Project Timeline\", x = \"Date\", y = \"Task\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"right\",\n    plot.title = element_text(size = 14, face = \"bold\")\n  )"
  },
  {
    "objectID": "Data_Preparation.html#data-preparation-for-genre-diffusion",
    "href": "Data_Preparation.html#data-preparation-for-genre-diffusion",
    "title": "Data Preparation",
    "section": "Data Preparation for Genre Diffusion",
    "text": "Data Preparation for Genre Diffusion\nThis reactive() function is designed to process musical influence data for downstream visualization tasks such as genre-level chord diagrams. The key processing steps are summarized below:\n\nFilter Valid Nodes\nOnly nodes of type \"Song\" or \"Album\" with non-missing genre values are retained:\n\n\nCode\nnodes &lt;- nodes_df %&gt;%\n  filter(`Node Type` %in% c(\"Song\", \"Album\"), !is.na(genre))\n\n\n\n\nOptional Year Filter\nIf a year range input (input$yearRange) is specified, the nodes are further filtered to only include those with a release_date falling within the selected range:\n\n\nCode\nif (!is.null(input$yearRange)) {\n  nodes &lt;- nodes %&gt;%\n    filter(\n      !is.na(release_date),\n      as.numeric(release_date) &gt;= input$yearRange[1],\n      as.numeric(release_date) &lt;= input$yearRange[2]\n    )\n}\n\n\n\n\nJoin Genre Info to Edges\nGenres from source and target nodes are joined to the edge data so that genre-genre influence can be analyzed:\n\n\nCode\nedges &lt;- edges_df %&gt;%\n  left_join(nodes %&gt;% select(id, source_genre = genre), by = c(\"source\" = \"id\")) %&gt;%\n  left_join(nodes %&gt;% select(id, target_genre = genre), by = c(\"target\" = \"id\"))\n\n\n\n\nCreate Genre-Genre Frequency Table\nA summarized frequency table of genre-to-genre interactions is generated for use in a chord diagram. It counts how often genres influence each other:\n\n\nCode\nchord_df &lt;- edges %&gt;%\n  filter(!is.na(source_genre), !is.na(target_genre)) %&gt;%\n  group_by(source_genre, target_genre) %&gt;%\n  summarize(value = n(), .groups = \"drop\")\n\n\n\n\nConvert to Matrix Format\nThe grouped data is reshaped into a matrix format using reshape2::acast, where rows and columns represent source and target genres, respectively, and cells indicate interaction counts:\n\n\nCode\ngenre_matrix &lt;- reshape2::acast(chord_df, source_genre ~ target_genre, value.var = \"value\", fill = 0)\n\n\n\n\nReturn Results as a List\nFinally, a list containing the genre matrix, filtered nodes, and enriched edges is returned for use in visualizations (e.g., chord diagrams):\n\n\nCode\nlist(\n  genre_matrix = genre_matrix,\n  nodes = nodes,\n  edges = edges\n)"
  }
]